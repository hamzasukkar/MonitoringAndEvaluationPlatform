@model MonitoringAndEvaluationPlatform.ViewModel.FrameworkDashboardViewModel

@{
    ViewData["Title"] = "FrameworkDashboard";
    Layout = "~/Views/Shared/_MonitoringLayout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Health Framework Dashboard</title>
	<style>
		:root {
			--primary: #4a6fa5;
			--secondary: #6b8cae;
			--accent: #ff7e5f;
			--light: #f8f9fa;
			--dark: #343a40;
			--success: #28a745;
			--warning: #ffc107;
			--danger: #dc3545;
		}

		body {
			font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
			line-height: 1.6;
			color: var(--dark);
			background-color: #f5f7fa;
			margin: 0 auto;
		}

		h1, h2 {
			color: var(--primary);
			margin-bottom: 1.5rem;
			font-weight: 600;
		}

		.framework-container {
			display: flex;
			flex-wrap: wrap;
			gap: 20px;
			margin: 40px;
		}

		.framework-card {
			background: white;
			border-radius: 10px;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
			padding: 25px;
			flex: 1 1 300px;
			transition: transform 0.3s ease;
		}

			.framework-card:hover {
				transform: translateY(-5px);
			}

		.framework-header {
			border-bottom: 2px solid var(--light);
			padding-bottom: 15px;
			margin-bottom: 15px;
			display: flex;
			justify-content: space-between;
			align-items: center;
		}

		.outcome-badge {
			background: var(--accent);
			color: white;
			padding: 5px 10px;
			border-radius: 20px;
			font-size: 0.9rem;
			font-weight: 600;
		}

		.metric {
			margin-bottom: 15px;
		}

		.metric-value {
			font-size: 1.8rem;
			font-weight: 700;
			color: var(--accent);
			margin-bottom: 5px;
		}

		.metric-label {
			color: var(--secondary);
			font-size: 0.9rem;
			text-transform: uppercase;
			letter-spacing: 1px;
		}

		.outcome-stats {
			background: var(--light);
			border-radius: 8px;
			padding: 15px;
			margin-top: 20px;
		}

		.stat-grid {
			display: grid;
			grid-template-columns: repeat(2, 1fr);
			gap: 10px;
		}

		.stat-item {
			text-align: center;
			transition: all 0.3s ease;
		}

			.stat-item a {
				text-decoration: none;
				color: inherit;
				display: block;
				padding: 10px;
				border-radius: 6px;
			}

			.stat-item:hover {
				transform: scale(1.05);
			}

				.stat-item:hover a {
					background: rgba(74, 111, 165, 0.1);
				}

		.stat-value {
			font-size: 1.5rem;
			font-weight: 600;
			color: var(--primary);
			margin-bottom: 5px;
		}

		.stat-label {
			font-size: 0.8rem;
			color: var(--secondary);
			transition: color 0.3s ease;
		}

		.stat-item:hover .stat-label {
			color: var(--accent);
		}

		.progress-container {
			height: 8px;
			background: #e9ecef;
			border-radius: 4px;
			margin-top: 5px;
			overflow: hidden;
		}

		.progress-bar {
			height: 100%;
			background: var(--accent);
			border-radius: 4px;
			transition: width 0.5s ease;
		}
		.filter-form {
			background: white;
			padding: 20px;
			margin: 20px 40px;
			border-radius: 12px;
			box-shadow: 0 4px 12px rgba(0,0,0,0.06);
			display: flex;
			flex-direction: column;
			gap: 15px;
		}

		.filter-header {
			display: flex;
			justify-content: space-between;
			align-items: center;
		}

			.filter-header h3 {
				margin: 0;
				font-size: 1.2rem;
				color: var(--primary);
			}

		.filter-buttons {
			display: flex;
			gap: 10px;
		}

		.apply-btn, .reset-btn {
			padding: 6px 14px;
			font-size: 0.9rem;
			font-weight: 500;
			border-radius: 8px;
			border: none;
			cursor: pointer;
			text-decoration: none;
			color: white;
		}

		.apply-btn {
			background-color: var(--primary);
			border: 1px solid var(--primary);
		}

			.apply-btn:hover {
				background-color: #3a5c87;
			}

		.reset-btn {
			background-color: var(--danger);
			border: 1px solid var(--danger);
		}

			.reset-btn:hover {
				background-color: #c82333;
			}

		.checkbox-list {
			display: flex;
			flex-wrap: wrap;
			gap: 10px 20px;
		}

		.checkbox-item {
			font-size: 0.95rem;
			color: var(--dark);
		}
	</style>


</head>
<body>
	<form method="get" asp-action="FrameworkDashboard" class="filter-form">
		<div class="filter-header">
			<h3>Filter by Ministry</h3>
			<div class="filter-buttons">
				<button type="submit" class="apply-btn">Apply Filter</button>
				<a asp-action="FrameworkDashboard" class="reset-btn">Reset</a>
			</div>
		</div>

		<div class="checkbox-list">
			@foreach (var ministry in Model.Ministries)
			{
				<label class="checkbox-item">
					<input type="checkbox" name="selectedMinistryIds" value="@ministry.Code"
					@(Model.SelectedMinistryIds.Contains(ministry.Code) ? "checked" : "") />
					@ministry.MinistryName
				</label>
			}
		</div>
	</form>




	<div class="framework-container">
		@foreach (var item in Model.Frameworks)
		{
			var outcomes = item.Outcomes;
			var outputs = outcomes.SelectMany(o => o.Outputs);
			var subOutputs = outputs.SelectMany(output => output.SubOutputs);
			var indicators = subOutputs.SelectMany(subOutput => subOutput.Indicators);

			var projectCount = indicators
			.SelectMany(indicator => indicator.Measures)
			.Select(measure => measure.Project)
			.Distinct()
			.Count();

			decimal IndicatorsPerformance = (decimal)Math.Round(item.IndicatorsPerformance, 2); // Rounds to 2 decimal places

			<div class="framework-card">
				<div class="framework-header">
					<h2>@item.Name</h2>
					<div class="outcome-badge">Outcome: @item.Outcomes.Count</div>
				</div>

				<div class="metric">
					<div class="metric-value">@IndicatorsPerformance%</div>
					<div class="metric-label">Performance Assessment</div>
					<div class="progress-container">
						<div class="progress-bar" style="width: @IndicatorsPerformance%"></div>
					</div>
				</div>

				<div class="metric">
					<div class="metric-value">@item.DisbursementPerformance%</div>
					<div class="metric-label">Disbursement</div>
					<div class="progress-container">
						<div class="progress-bar" style="width: @item.DisbursementPerformance%"></div>
					</div>
				</div>

				<div class="metric">
					<div class="metric-value">@item.FieldMonitoring%</div>
					<div class="metric-label">Monitoring</div>
					<div class="progress-container">
						<div class="progress-bar" style="width: @item.FieldMonitoring%"></div>
					</div>
				</div>

				<div class="metric">
					<div class="metric-value">@item.ImpactAssessment%</div>
					<div class="metric-label">Assessment</div>
					<div class="progress-container">
						<div class="progress-bar" style="width: @item.ImpactAssessment%"></div>
					</div>
				</div>

				<div class="outcome-stats">
					<div class="stat-grid">
						<div class="stat-item">
							<a asp-controller="Monitoring" asp-action="Outcome" asp-route-id="@item.Code">
								<div class="stat-value">@item.Outcomes.Count</div>
								<div class="stat-label">Outcome</div>
							</a>
						</div>
						<div class="stat-item">
							<a asp-controller="Monitoring" asp-action="FrameworkOutputs" asp-route-id="@item.Code">
								<div class="stat-value">@outputs.Count()</div>
								<div class="stat-label">Outputs</div>
							</a>
						</div>
						<div class="stat-item">
							<a asp-controller="Monitoring" asp-action="FrameworkSubOutputs" asp-route-id="@item.Code">
								<div class="stat-value">@subOutputs.Count()</div>
								<div class="stat-label">Sub-outputs</div>
							</a>
						</div>
						<div class="stat-item">
							<a asp-controller="Monitoring" asp-action="FrameworkIndicators" asp-route-id="@item.Code">
								<div class="stat-value">@indicators.Count()</div>
								<div class="stat-label">Indicators</div>
							</a>
						</div>
						<div class="stat-item">
							<a asp-controller="Monitoring" asp-action="FrameworkProjects" asp-route-id="@item.Code">
								<div class="stat-value">@projectCount</div>
								<div class="stat-label">Projects</div>
							</a>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
</body>
</html>



