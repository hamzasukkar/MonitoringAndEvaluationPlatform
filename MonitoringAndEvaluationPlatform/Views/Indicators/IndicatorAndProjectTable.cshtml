@model IEnumerable<MonitoringAndEvaluationPlatform.Models.Indicator>
@using MonitoringAndEvaluationPlatform.Helpers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Localization

@{
    ViewData["Title"] = "Indicators and Projects";
    Layout = "~/Views/Shared/_ResultsFrameworkLayout.cshtml";
}

<div class="container-fluid">
    @{
        ViewData["breadcrumbLevel"] = "indicators";
    }
    @await Html.PartialAsync("_HierarchyBreadcrumb")
    
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">@Localizer["Indicators and Projects Management"]</h4>
            <p class="text-muted mb-0">@Localizer["View and manage indicators with their related projects"]</p>
        </div>
        <div>
            <a asp-action="Index" asp-route-frameworkCode="@ViewData["frameworkCode"]"
               asp-route-subOutputCode="@ViewData["subOutputCode"]" class="btn btn-outline-secondary me-2">
                <i class="fas fa-list me-2"></i>@Localizer["Regular View"]
            </a>
            <a asp-action="IndicatorAndProject" asp-route-frameworkCode="@ViewData["frameworkCode"]"
               asp-route-subOutputCode="@ViewData["subOutputCode"]" class="btn btn-outline-info me-2">
                <i class="fas fa-th me-2"></i>@Localizer["Card View"]
            </a>
            @if (@ViewData["subOutputCode"] != null)
            {
                <a asp-action="AdjustWeights" asp-route-frameworkCode="@ViewData["frameworkCode"]"
                asp-route-subOutputCode="@ViewData["subOutputCode"]" class="btn btn-warning">
                    <i class="fas fa-balance-scale me-2"></i>@Localizer["Adjust Weights"]
                </a>
            }
        </div>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    @if (@ViewData["subOutputCode"] != null)
    {
        <!-- Inline Create Form -->
        <div class="card mb-4 border-primary">
            <div class="card-header bg-primary text-white">
                <strong>@Localizer["Add New Indicator"]</strong>
            </div>
            <div class="card-body">
                <form method="post" class="row g-3">
                    @Html.AntiForgeryToken()

                    <input type="hidden" name="SubOutputCode" value="@ViewData["subOutputCode"]" />

                    <div class="col-md-6">
                        <label for="Name" class="form-label">@Localizer["Name"]</label>
                        <input type="text" name="Name" class="form-control" required />
                    </div>

                    <div class="col-md-4">
                        <label for="Target" class="form-label">@Localizer["Target"]</label>
                        <input type="number" step="1" name="Target" class="form-control" required />
                    </div>

                    <div class="col-md-2 d-flex align-items-end">
                        <button type="submit" class="btn btn-success w-100" asp-action="CreateInline">
                            <i class="fas fa-plus-circle me-1"></i> @Localizer["Add"]
                        </button>
                    </div>

                    <div class="col-md-2 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100" asp-action="CreateAndRedirectToProject">
                            <i class="fas fa-arrow-circle-right me-1"></i>@Localizer["Add & Create Project"]
                        </button>
                    </div>
                </form>
            </div>
        </div>
    }

    <!-- Filter and Search Form -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form asp-action="IndicatorAndProjectTable" method="get" class="row g-3">
                <div class="col-md-4">
                    <label for="projectId" class="form-label">@Localizer["Filter by Project"]</label>
                    @Html.DropDownList("projectId", ViewData["Projects"] as SelectList, 
                        Localizer["-- All Projects --"].Value, new { @class = "form-select" })
                </div>
                <div class="col-md-6">
                    <label for="searchString" class="form-label">@Localizer["Search"]</label>
                    <div class="input-group">
                        <input type="text" name="searchString" class="form-control"
                               placeholder="@Localizer["Search by indicator name, suboutput, or project..."]"
                               value="@ViewData["CurrentFilter"]">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search me-1"></i> @Localizer["Search"]
                        </button>
                    </div>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <a asp-action="IndicatorAndProjectTable" asp-route-frameworkCode="@ViewData["frameworkCode"]"
                       asp-route-subOutputCode="@ViewData["subOutputCode"]" class="btn btn-outline-secondary w-100">
                        <i class="fas fa-times me-1"></i> @Localizer["Clear"]
                    </a>
                </div>
                <!-- Hidden fields to preserve other filters -->
                <input type="hidden" name="frameworkCode" value="@ViewData["frameworkCode"]" />
                <input type="hidden" name="subOutputCode" value="@ViewData["subOutputCode"]" />
            </form>
        </div>
    </div>

    <!-- Indicators Table -->
    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>@Localizer["Indicator Name"]</th>
                            <th>@Localizer["Weight"]</th>
                            <th>@Localizer["Indicators Performance"]</th>
                            <th>@Localizer["Disbursement Performance"]</th>
                            <th>@Localizer["SubOutput"]</th>
                            <th>@Localizer["Related Projects"]</th>
                            <th class="text-end">@Localizer["Actions"]</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            string indicatorsClass = ProgressBarHelper.GetProgressBarClass(item.IndicatorsPerformance);
                            string disbursementClass = ProgressBarHelper.GetProgressBarClass(item.DisbursementPerformance);
                            double IndicatorsPerformance = Math.Round(item.IndicatorsPerformance, 0);

                            <tr id="indicator-row-@item.IndicatorCode">
                                <td>
                                    <span id="name-display-@item.IndicatorCode">@item.Name</span>
                                    <input type="text" class="form-control d-none" id="name-input-@item.IndicatorCode" value="@item.Name" />
                                </td>
                                <td>@item.Weight</td>
                                <td title="@Localizer["Indicators Performance"]: @IndicatorsPerformance%">
                                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(IndicatorsPerformance, indicatorsClass))
                                </td>
                                <td title="@Localizer["Disbursement Performance"]: @item.DisbursementPerformance%">
                                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(item.DisbursementPerformance, disbursementClass))
                                </td>
                                <td>
                                    <a class="nav-theme-link text-decoration-none" asp-action="Index" asp-controller="SubOutputs" asp-route-outputCode="@item.SubOutput.OutputCode">@item.SubOutput?.Name</a>
                                </td>
                                <td>
                                    @if (item.ProjectIndicators.Any())
                                    {
                                        <div class="dropdown">
                                            <button class="btn btn-sm btn-outline-info dropdown-toggle" type="button" 
                                                    data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="fas fa-project-diagram me-1"></i>
                                                @item.ProjectIndicators.Count() @Localizer["Projects"]
                                            </button>
                                            <ul class="dropdown-menu">
                                                @foreach (var projectIndicator in item.ProjectIndicators)
                                                {
                                                    var project = projectIndicator.Project;
                                                    <li>
                                                        <a class="dropdown-item" asp-action="Details" asp-controller="Projects" 
                                                           asp-route-id="@project.ProjectID">
                                                            <i class="fas fa-folder me-1"></i>
                                                            @project.ProjectName
                                                            <small class="text-muted d-block">
                                                                @Localizer["Budget"]: @project.EstimatedBudget.ToString("C")
                                                            </small>
                                                        </a>
                                                    </li>
                                                }
                                                <li><hr class="dropdown-divider"></li>
                                                <li>
                                                    <a class="dropdown-item" asp-action="Create" asp-controller="Projects" 
                                                       asp-route-indicatorId="@item.IndicatorCode">
                                                        <i class="fas fa-plus me-1"></i>@Localizer["Add New Project"]
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center">
                                            <small class="text-muted">@Localizer["No Projects"]</small>
                                            <br>
                                            <a asp-action="Create" asp-controller="Projects" 
                                               asp-route-indicatorId="@item.IndicatorCode"
                                               class="btn btn-xs btn-outline-success mt-1">
                                                <i class="fas fa-plus me-1"></i>@Localizer["Add"]
                                            </a>
                                        </div>
                                    }
                                </td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@item.IndicatorCode" class="btn btn-sm btn-outline-primary" title="View">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-warning" title="Edit"
                                                onclick="toggleEdit('@item.IndicatorCode')"
                                                id="edit-btn-@item.IndicatorCode">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <a href="javascript:void(0);"
                                           class="btn btn-sm btn-outline-danger"
                                           title="Delete"
                                           onclick="confirmDelete(@item.IndicatorCode)">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                
                @if (!Model.Any())
                {
                    <div class="text-center text-muted py-5">
                        <i class="fas fa-search fa-3x mb-3"></i>
                        <h5>@Localizer["No Results Found"]</h5>
                        <p>@Localizer["Try adjusting your filters or search criteria."]</p>
                        <a asp-action="IndicatorAndProjectTable" asp-route-frameworkCode="@ViewData["frameworkCode"]"
                           asp-route-subOutputCode="@ViewData["subOutputCode"]" class="btn btn-primary">
                            <i class="fas fa-refresh me-2"></i> @Localizer["View All"]
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Styles -->
<style>
    .table-hover tbody tr:hover {
        background-color: rgba(13, 110, 253, 0.05);
    }

    .progress {
        height: 24px;
        border-radius: 4px;
    }

    .progress-bar {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .btn-group .btn {
        padding: 0.25rem 0.5rem;
    }

    .card-header {
        font-weight: 600;
    }

    .input-group {
        max-width: 500px;
    }

    .table-responsive {
        overflow-x: hidden;
    }

    .btn-xs {
        padding: 0.15rem 0.3rem;
        font-size: 0.7rem;
    }

    .dropdown-item small {
        font-size: 0.75rem;
    }
</style>

<script>
    // Auto-submit form when project dropdown changes
    document.getElementById('projectId').addEventListener('change', function() {
        this.form.submit();
    });

    function toggleEdit(id) {
        const nameDisplay = document.getElementById(`name-display-${id}`);
        const nameInput = document.getElementById(`name-input-${id}`);
        const editBtn = document.getElementById(`edit-btn-${id}`);

        if (editBtn.innerHTML.includes("fa-save")) {
            // Save action
            const newName = nameInput.value;

            fetch(`/Indicators/InlineEditName/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify({ name: newName })
            })
            .then(response => {
                if (response.ok) {
                    nameDisplay.textContent = newName;
                    nameDisplay.classList.remove("d-none");
                    nameInput.classList.add("d-none");
                    editBtn.innerHTML = `<i class="fas fa-edit"></i>`;

                    Swal.fire({
                        icon: 'success',
                        title: '@Localizer["Updated!"]',
                        text: '@Localizer["Indicator name updated successfully"]',
                        timer: 1200,
                        showConfirmButton: false
                    });
                } else {
                    Swal.fire('Error', '@Localizer["Could not save changes"]', 'error');
                }
            });
        } else {
            // Edit mode
            nameDisplay.classList.add("d-none");
            nameInput.classList.remove("d-none");
            editBtn.innerHTML = `<i class="fas fa-save"></i>`;
        }
    }

    function confirmDelete(indicatorCode) {
        Swal.fire({
            title: '@Localizer["Are you sure?"]',
            text: "@Localizer["You won't be able to revert this!"]",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: '@Localizer["Yes, delete it!"]'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: `/Indicators/DeleteConfirmed/${indicatorCode}`,
                    type: 'POST',
                    success: function () {
                        $(`#indicator-row-${indicatorCode}`).fadeOut();
                        Swal.fire({
                            title: '"@Localizer["Deleted!"]"',
                            text: '"@Localizer["Indicator has been deleted."]"',
                            icon: 'success',
                            timer: 2000,
                            showConfirmButton: false
                        });
                        setTimeout(function(){
                            window.location.reload();
                        }, 2000);
                    },
                    error: function () {
                        Swal.fire('Error', '"@Localizer["Failed to delete the indicator."]"', 'error');
                    }
                });
            }
        });
    }
</script>