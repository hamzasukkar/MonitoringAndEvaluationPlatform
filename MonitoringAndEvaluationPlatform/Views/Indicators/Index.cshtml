@model IEnumerable<MonitoringAndEvaluationPlatform.Models.Indicator>
@using MonitoringAndEvaluationPlatform.Helpers

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_ResultsFrameworkLayout.cshtml";
}

<h1>Indicators</h1>

<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchString" class="form-control" placeholder="Search by Name or SubOutput" value="@ViewData["CurrentFilter"]" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<p>
    <a asp-action="Create" asp-route-id="@ViewData["subOutputCode"]" class="btn btn-success">Create New Indicator</a>
    <a asp-action="AdjustWeights" asp-route-subOutputCode="@ViewData["subOutputCode"]" class="btn btn-warning">Adjust Weights</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            @* <th>@Html.DisplayNameFor(model => model.Trend)</th> *@
            <th>@Html.DisplayNameFor(model => model.Weight)</th>
            <th>
                Indicators Performance
            </th>
            <th>
                Disbursement Performance
            </th>
            <th>
                Field Monitoring
            </th>
            <th>
                Impact Assessment
            </th>
            <th>@Html.DisplayNameFor(model => model.SubOutput)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            string indicatorsClass = ProgressBarHelper.GetProgressBarClass(item.IndicatorsPerformance);
            string disbursementClass = ProgressBarHelper.GetProgressBarClass(item.DisbursementPerformance);
            string fieldMonitoringClass = ProgressBarHelper.GetProgressBarClass(item.FieldMonitoring);
            string impactAssessmentClass = ProgressBarHelper.GetProgressBarClass(item.ImpactAssessment);
            string trendImage = ProgressBarHelper.GetTrendImage(item.Trend);
            double IndicatorsPerformance = Math.Round(item.IndicatorsPerformance, 2);
            <tr>
                <td>
                    <a href="/Indicators/Details/@item.IndicatorCode">@item.Name</a>
                </td>
               @*  <td>@Html.DisplayFor(modelItem => item.Trend)</td> *@
                <td>@Html.DisplayFor(modelItem => item.Weight)</td>
                <td>
                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(IndicatorsPerformance, indicatorsClass))
                </td>
                <td>
                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(item.DisbursementPerformance, disbursementClass))
                </td>
                <td>
                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(item.FieldMonitoring, fieldMonitoringClass))
                </td>
                <td>
                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(item.ImpactAssessment, impactAssessmentClass))
                </td>
                <td>
                    <a href="/SubOutputs/Index/@item.SubOutputCode">@item.SubOutput.Name</a>
                </td>
                <td>
                    <div class="d-inline">
                        <form method="post" style="display: inline;">
                            <button class="btn btn-sm btn-success" title="Tree">
                                <i class="bi bi-diagram-3"></i>
                            </button>
                        </form>
                        <form asp-action="Details" asp-route-id="@item.IndicatorCode" method="get" style="display: inline;">
                            <button class="btn btn-sm btn-primary" title="View">
                                <i class="bi bi-eye"></i>
                            </button>
                        </form>
                        <form asp-action="Edit" asp-route-id="@item.IndicatorCode" method="get" style="display: inline;">
                            <button class="btn btn-sm btn-warning" title="Edit">
                                <i class="bi bi-pencil"></i>
                            </button>
                        </form>
                        <form asp-action="Delete" asp-route-id="@item.IndicatorCode" method="post" style="display: inline;">
                            <button class="btn btn-sm btn-danger" title="Delete">
                                <i class="bi bi-trash"></i>
                            </button>
                        </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
