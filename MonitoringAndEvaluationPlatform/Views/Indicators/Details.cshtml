@* @model MonitoringAndEvaluationPlatform.Models.Indicator *@

@model MonitoringAndEvaluationPlatform.ViewModel.IndicatorDetailsViewModel
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_ResultsFrameworkLayout.cshtml";
    //Layout = null;
}
<!-- Include jQuery -->
@* <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<!-- Include jsTree -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.3.12/themes/default/style.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.3.12/jstree.min.js"></script> *@
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@* <ul>
    @foreach (var node in Model.Hierarchy)
    {
        <li>
            <a href="@Url.Action("Details", node.Type + "s", new { id = node.Code })">
                @node.Name (@node.Type)
            </a>
        </li>
    }
</ul> *@

<div id="hierarchyTree">
    <ul>
        @foreach (var node in Model.Hierarchy)
        {
            <li>
                <a href="@Url.Action("Details", node.Type + "s", new { id = node.Code })">
                    @node.Name (@node.Type)
                </a>
            </li>
        }
    </ul>
</div>
<div>
    <h4>Indicator</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Name</dt>
        <dd class="col-sm-4">@Model.Indicator.Name</dd>

        <dt class="col-sm-2">Source</dt>
        <dd class="col-sm-4">@Model.Indicator.Source</dd>

        <dt class="col-sm-1">Target</dt>
        <dd class="col-sm-1">@Model.Indicator.Target</dd>

@* 
        <dt class="col-sm-1">Trend</dt>
        <dd class="col-sm-1">@Model.Indicator.Trend</dd> *@
    </dl>
</div>
<p>
    <a asp-controller="Measures" asp-action="Create">Create New Measure</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Value</th>
            <th>Value Type</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Measures)
        {
           <tr>
               <td>
                    @item.Date.ToString("yyyy-MM-dd")
               </td>

                <td>
                    @item.Value
                </td>
                <td>
                    @item.ValueType
                </td>
           </tr>
        }
    </tbody>
</table>
<canvas id="performanceChart" width="800" height="400"></canvas>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Indicator.IndicatorCode">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>


@* <div id="hierarchyTree">
    <ul>
        @foreach (var node in Model.Hierarchy)
        {
            <li data-jstree='{ "opened": true }'>
                <a href="@Url.Action("Details", node.Type + "s", new { id = node.Code })">
                    @node.Name (@node.Type)
                </a>
            </li>
        }
    </ul>
</div>


<script>
    $(document).ready(function () {
        $('#hierarchyTree').jstree({
            "core": {
                "themes": {
                    "responsive": true
                }
            },
            "plugins": ["wholerow", "themes"]
        });
    });
</script> *@
<script>
    const ctx = document.getElementById('performanceChart').getContext('2d');
    const performanceChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.ChartDataViewModel.Labels)),
            datasets: [
                {
                    label: 'Real',
                    data: @Html.Raw(Json.Serialize(Model.ChartDataViewModel.RealData)),
                    borderColor: 'blue',
                    backgroundColor: 'rgba(0, 0, 255, 0.1)',
                    fill: true
                },
                {
                    label: 'Historical',
                    data: @Html.Raw(Json.Serialize(Model.ChartDataViewModel.HistoricalData)),
                    borderColor: 'lightblue',
                    backgroundColor: 'rgba(173, 216, 230, 0.1)',
                    fill: true
                },
                {
                    label: 'Required',
                    data: @Html.Raw(Json.Serialize(Model.ChartDataViewModel.RequiredData)),
                    borderColor: 'red',
                    backgroundColor: 'rgba(255, 0, 0, 0.1)',
                    fill: true
                }
            ]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top'
                },
            },
            scales: {
                x: {
                    beginAtZero: true
                },
                y: {
                    min: 80,
                    max: 100
                }
            }
        }
    });
</script>