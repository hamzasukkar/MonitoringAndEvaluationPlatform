@using MonitoringAndEvaluationPlatform.ViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Localization
@model List<OutcomesViewModel>
@{
    ViewData["Title"] = "Adjust Weights";
    var frameworkCode = (int)ViewBag.FrameworkCode;
    Layout = "~/Views/Shared/_ResultsFrameworkLayout.cshtml";
}

<h2>@Localizer["Adjust Weights"]</h2>

<form asp-action="AdjustWeights" method="post">
    <input type="hidden" name="frameworkCode" value="@frameworkCode" />

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>@Localizer["Outcome"]</th>
                <th>@Localizer["Weight"] (%)</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(m => m[i].Name)
                        <input type="hidden" asp-for="@Model[i].Code" />
                        <input type="hidden" asp-for="@Model[i].Name" />
                    </td>
                    <td>
                        <input asp-for="@Model[i].Weight" class="form-control" />
                        <span asp-validation-for="@Model[i].Weight" class="text-danger"></span>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-danger">
        @Html.ValidationSummary()
    </div>

    <button type="submit" class="btn btn-success">@Localizer["Save Weights"]</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
