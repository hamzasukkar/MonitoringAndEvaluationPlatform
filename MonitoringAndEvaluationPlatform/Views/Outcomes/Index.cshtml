@model IEnumerable<MonitoringAndEvaluationPlatform.Models.Outcome>
@using MonitoringAndEvaluationPlatform.Helpers
@{
    ViewData["Title"] = "Outcomes";
    Layout = "~/Views/Shared/_ResultsFrameworkLayout.cshtml";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Outcomes Management</h4>
            <p class="text-muted mb-0">View and manage all outcome performance metrics</p>
        </div>
        <div>
            <button class="btn btn-success me-2" type="button" id="toggleCreateForm">
                <i class="fas fa-plus me-2"></i>Create New Outcome
            </button>
            @if (ViewBag.SelectedFrameworkCode != null)
            {
                <a asp-action="AdjustWeights" asp-route-frameworkCode="@ViewBag.SelectedFrameworkCode" class="btn btn-warning">
                    <i class="fas fa-balance-scale me-2"></i>Adjust Weights
                </a>
            }
        </div>
    </div>

    <!-- Collapsible Outcome Creation Form -->
    <div id="createOutcomeForm" class="card shadow-sm mb-4" style="display:none;">
        <div class="card-body">
            <form asp-action="Create" method="post">
                <input type="hidden" name="FrameworkCode" value="@ViewBag.SelectedFrameworkCode" />
                <div class="mb-3">
                    <label for="Name" class="form-label">Outcome Name</label>
                    <input type="text" class="form-control" id="Name" name="Name" required />
                </div>
                <!-- Add other fields as needed -->

                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save me-2"></i>Save Outcome
                </button>
            </form>
        </div>
    </div>

    <!-- Outcome List Table -->
    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Outcome Name</th>
                            <th>Weight</th>
                            <th>Indicators Performance</th>
                            <th>Disbursement Performance</th>
                            <th>Field Monitoring</th>
                            <th>Impact Assessment</th>
                            <th>Framework</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            string indicatorsClass = ProgressBarHelper.GetProgressBarClass(item.IndicatorsPerformance);
                            string disbursementClass = ProgressBarHelper.GetProgressBarClass(item.DisbursementPerformance);
                            string fieldMonitoringClass = ProgressBarHelper.GetProgressBarClass(item.FieldMonitoring);
                            string impactAssessmentClass = ProgressBarHelper.GetProgressBarClass(item.ImpactAssessment);
                            double IndicatorsPerformance = Math.Round(item.IndicatorsPerformance, 0);

                            <tr>
                                <td>
                                    <a asp-controller="Outputs" asp-action="Index" asp-route-outcomeCode="@item.Code" class="text-decoration-none">
                                        <strong>@item.Name</strong>
                                    </a>
                                </td>
                                <td>@item.Weight</td>
                                <td>@await Html.PartialAsync("_ProgressBar", Tuple.Create(IndicatorsPerformance, indicatorsClass))</td>
                                <td>@await Html.PartialAsync("_ProgressBar", Tuple.Create(item.DisbursementPerformance, disbursementClass))</td>
                                <td>@await Html.PartialAsync("_ProgressBar", Tuple.Create(item.FieldMonitoring, fieldMonitoringClass))</td>
                                <td>@await Html.PartialAsync("_ProgressBar", Tuple.Create(item.ImpactAssessment, impactAssessmentClass))</td>
                                <td>
                                    <a href="/Frameworks/Index/@item.FrameworkCode" class="text-decoration-none">@item.Framework.Name</a>
                                </td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@item.Code" class="btn btn-sm btn-outline-primary" title="View">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.Code" class="btn btn-sm btn-outline-warning" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Code" class="btn btn-sm btn-outline-danger" title="Delete">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Toggle Script -->

    <script>
        document.getElementById('toggleCreateForm').addEventListener('click', function () {
            const form = document.getElementById('createOutcomeForm');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        });
    </script>


<!-- Optional Styling -->
<style>
    .table-hover tbody tr:hover {
        background-color: rgba(13, 110, 253, 0.05);
    }

    .progress {
        height: 24px;
        border-radius: 4px;
    }

    .progress-bar {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .btn-group .btn {
        padding: 0.25rem 0.5rem;
    }

    .card-header {
        font-weight: 600;
    }

    .table-responsive {
        overflow-x: hidden;
    }
</style>
