@model IEnumerable<MonitoringAndEvaluationPlatform.Models.Outcome>
@using MonitoringAndEvaluationPlatform.Helpers
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Localization

@{
    ViewData["Title"] = "Outcomes";
    Layout = "~/Views/Shared/_DashboardHomeLayout.cshtml";
    var culture = Context.Features.Get<IRequestCultureFeature>().RequestCulture.Culture.Name;
}

<!-- Dashboard Header -->
<div class="dashboard-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="dashboard-title">
                <i class="fas fa-bullseye me-3"></i>
                @Localizer["Outcomes Management"]
            </h1>
            <p class="dashboard-subtitle">
                @Localizer["Manage and monitor development outcomes and their performance indicators"]
            </p>
        </div>
        <div class="d-flex gap-2">
            @if (ViewBag.SelectedFrameworkCode != null)
            {
                <button class="btn btn-success btn-lg shadow-sm" type="button" id="toggleCreateForm">
                    <i class="fas fa-plus me-2"></i>@Localizer["Create New Outcome"]
                </button>
                <a asp-action="AdjustWeights" asp-route-frameworkCode="@ViewBag.SelectedFrameworkCode" 
                   class="btn btn-warning btn-lg shadow-sm">
                    <i class="fas fa-balance-scale me-2"></i>@Localizer["Adjust Weights"]
                </a>
            }
        </div>
    </div>
</div>

<!-- Collapsible Outcome Creation Form -->
<div id="createOutcomeForm" class="chart-card mb-4" style="display:none;">
    <div class="chart-title">
        <i class="fas fa-plus"></i>
        @Localizer["Create New Outcome"]
    </div>
    <form asp-action="Create" method="post">
        <input type="hidden" name="FrameworkCode" value="@ViewBag.SelectedFrameworkCode" />
        <div class="row">
            <div class="col-md-8">
                <div class="mb-3">
                    <label for="Name" class="form-label fw-bold">
                        <i class="fas fa-tag me-2"></i>@Localizer["Outcome Name"]
                    </label>
                    <input type="text" class="form-control form-control-lg" id="Name" name="Name" required 
                           placeholder="@Localizer["Enter outcome name"]" />
                </div>
            </div>
            <div class="col-md-4 d-flex align-items-end">
                <div class="d-grid w-100">
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="fas fa-save me-2"></i>@Localizer["Save Outcome"]
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<!-- Outcomes Table -->
<div class="chart-card">
    <div class="chart-title">
        <i class="fas fa-bullseye"></i>
        @Localizer["Outcomes"] (@Model.Count())
    </div>
    
    @if (Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-hover modern-table">
                <thead class="table-header">
                    <tr>
                        <th class="sortable-header">
                            <div class="header-link">
                                <i class="fas fa-bullseye me-2"></i>@Localizer["Outcome Name"]
                            </div>
                        </th>
                        <th class="text-center">
                            <div class="header-link">
                                <i class="fas fa-weight me-2"></i>@Localizer["Weight"]
                            </div>
                        </th>
                        <th class="text-center">
                            <div class="header-link">
                                <i class="fas fa-chart-line me-2"></i>@Localizer["Indicators Performance"]
                            </div>
                        </th>
                        <th class="text-center">
                            <div class="header-link">
                                <i class="fas fa-money-bill-wave me-2"></i>@Localizer["Disbursement Performance"]
                            </div>
                        </th>
                        <th class="text-center">
                            <div class="header-link">
                                <i class="fas fa-sitemap me-2"></i>@Localizer["Framework"]
                            </div>
                        </th>
                        <th class="text-center">
                            <div class="header-link">
                                <i class="fas fa-cogs me-2"></i>@Localizer["Actions"]
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        string indicatorsClass = ProgressBarHelper.GetProgressBarClass(item.IndicatorsPerformance);
                        string disbursementClass = ProgressBarHelper.GetProgressBarClass(item.DisbursementPerformance);
                        double IndicatorsPerformance = Math.Round(item.IndicatorsPerformance, 2);
                        double DisbursementPerformance = Math.Round(item.DisbursementPerformance, 2);
                        
                        <tr id="outcome-row-@item.Code" class="table-row">
                            <td class="outcome-name-cell">
                                <div class="d-flex align-items-center">
                                    <div class="outcome-icon me-3">
                                        <i class="fas fa-bullseye"></i>
                                    </div>
                                    <div>
                                        <span id="fw-name-@item.Code" class="fw-name-view">
                                            <a asp-controller="Outputs" asp-action="Index" asp-route-outcomeCode="@item.Code" 
                                               class="outcome-name-link">
                                                @item.Name
                                            </a>
                                        </span>
                                        <input type="text" id="fw-name-input-@item.Code" 
                                               class="form-control fw-name-edit d-none" value="@item.Name" />
                                        <small class="text-muted d-block">
                                            <i class="fas fa-hashtag me-1"></i>ID: @item.Code
                                        </small>
                                    </div>
                                </div>
                            </td>
                            <td class="text-center">
                                <div class="weight-badge">
                                    <span class="badge bg-info fs-6">@item.Weight%</span>
                                </div>
                            </td>
                            <td class="text-center">
                                <div class="performance-metric">
                                    <div class="metric-value mb-2">
                                        <span class="badge bg-primary fs-6">@IndicatorsPerformance%</span>
                                    </div>
                                    <div class="progress-bar-modern">
                                        <div class="progress-fill-modern" 
                                             style="width: @IndicatorsPerformance%; background: linear-gradient(90deg, var(--primary-color), var(--primary-dark));"></div>
                                    </div>
                                </div>
                            </td>
                            <td class="text-center">
                                <div class="performance-metric">
                                    <div class="metric-value mb-2">
                                        <span class="badge bg-success fs-6">@DisbursementPerformance%</span>
                                    </div>
                                    <div class="progress-bar-modern">
                                        <div class="progress-fill-modern" 
                                             style="width: @DisbursementPerformance%; background: linear-gradient(90deg, var(--secondary-color), var(--primary-light));"></div>
                                    </div>
                                </div>
                            </td>
                            <td class="text-center">
                                <div class="framework-badge">
                                    <a href="/Frameworks/Index/@item.FrameworkCode" class="badge bg-secondary fs-6 text-decoration-none">
                                        @item.Framework.Name
                                    </a>
                                </div>
                            </td>
                            <td class="text-center">
                                <div class="btn-group action-buttons" role="group">
                                    <a asp-controller="Outputs" asp-action="Index" asp-route-outcomeCode="@item.Code" 
                                       class="btn btn-primary btn-sm action-btn" title="View Outputs">
                                        <i class="fas fa-arrow-right"></i>
                                    </a>
                                    <button class="btn btn-outline-primary btn-sm action-btn"
                                            onclick="toggleOutcomeEdit(@item.Code)" title="Edit Name">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-outline-danger btn-sm action-btn"
                                            onclick="confirmOutcomeDelete(@item.Code)" title="Delete">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <div class="stat-icon warning mx-auto mb-3" style="width: 80px; height: 80px; font-size: 2rem;">
                <i class="fas fa-bullseye"></i>
            </div>
            <h4 class="text-muted">@Localizer["No outcomes found"]</h4>
            <p class="text-muted">@Localizer["Create your first outcome to get started"]</p>
        </div>
    }
</div>

@section Scripts {
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        // Toggle create form
        document.getElementById('toggleCreateForm')?.addEventListener('click', function () {
            const form = document.getElementById('createOutcomeForm');
            if (form) {
                const isHidden = form.style.display === 'none';
                form.style.display = isHidden ? 'block' : 'none';
                
                if (isHidden) {
                    form.style.opacity = '0';
                    form.style.transform = 'translateY(-20px)';
                    setTimeout(() => {
                        form.style.transition = 'all 0.4s ease';
                        form.style.opacity = '1';
                        form.style.transform = 'translateY(0)';
                    }, 10);
                }
            }
        });

        function toggleOutcomeEdit(code) {
            const viewSpan = $(`#fw-name-${code}`);
            const input = $(`#fw-name-input-${code}`);
            
            const isEditing = !input.hasClass('d-none');

            if (isEditing) {
                // Save via AJAX
                const newName = input.val();

                $.ajax({
                    url: `/Outcomes/UpdateName`,
                    type: 'POST',
                    data: { id: code, name: newName },
                    success: function () {
                        viewSpan.html(`<a href="/Outputs?outcomeCode=${code}" class="outcome-name-link">${newName}</a>`);
                        input.addClass('d-none');
                        viewSpan.removeClass('d-none');
                        Swal.fire({
                            icon: 'success',
                            title: 'Saved!',
                            text: 'Outcome name updated successfully.',
                            timer: 2000,
                            showConfirmButton: false
                        });
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Could not update outcome name.'
                        });
                    }
                });
            } else {
                // Enter edit mode
                input.removeClass('d-none');
                viewSpan.addClass('d-none');
                input.focus();
            }
        }

        function confirmOutcomeDelete(code) {
            Swal.fire({
                title: '@Localizer["Are you sure?"]',
                text: '@Localizer["This will permanently delete the outcome and all associated data!"]',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: '@Localizer["Yes, delete it!"]',
                cancelButtonText: '@Localizer["Cancel"]',
                customClass: {
                    popup: 'swal2-modern',
                    confirmButton: 'btn btn-danger',
                    cancelButton: 'btn btn-secondary'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/Outcomes/DeleteConfirmed/${code}`,
                        type: 'POST',
                        success: function () {
                            $(`#outcome-row-${code}`).fadeOut(400, function() {
                                $(this).remove();
                            });
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted!',
                                text: '@Localizer["Outcome has been deleted successfully."]',
                                timer: 2000,
                                showConfirmButton: false
                            });
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: '@Localizer["Could not delete outcome. Please try again."]'
                            });
                        }
                    });
                }
            });
        }
        
        // Initialize page animations
        document.addEventListener('DOMContentLoaded', function() {
            // Animate table rows on load
            const tableRows = document.querySelectorAll('.table-row');
            tableRows.forEach((row, index) => {
                row.style.opacity = '0';
                row.style.transform = 'translateX(-20px)';
                setTimeout(() => {
                    row.style.transition = 'all 0.6s ease';
                    row.style.opacity = '1';
                    row.style.transform = 'translateX(0)';
                }, index * 100);
            });
            
            // Progress bar animation
            const progressBars = document.querySelectorAll('.progress-fill-modern');
            progressBars.forEach((bar, index) => {
                setTimeout(() => {
                    const width = bar.style.width;
                    bar.style.width = '0%';
                    setTimeout(() => {
                        bar.style.transition = 'width 1.5s ease-out';
                        bar.style.width = width;
                    }, 200);
                }, index * 100);
            });
        });
    </script>

    <style>
        /* Modern Table Styles */
        .modern-table {
            background: transparent;
            border: none;
            border-radius: 15px;
            overflow: hidden;
        }
        
        .table-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            color: white;
        }
        
        .table-header th {
            border: none;
            padding: 20px 15px;
            font-weight: 600;
            font-size: 0.95rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .header-link {
            color: white !important;
            text-decoration: none !important;
            display: flex;
            align-items: center;
            justify-content: flex-start;
            transition: all 0.3s ease;
        }
        
        .header-link:hover {
            color: rgba(255, 255, 255, 0.9) !important;
            transform: translateY(-1px);
        }
        
        .table-row {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: none;
            transition: all 0.3s ease;
        }
        
        .table-row:hover {
            background: rgba(255, 255, 255, 1);
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        
        .table-row td {
            border: none;
            padding: 20px 15px;
            vertical-align: middle;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }
        
        .outcome-name-cell {
            min-width: 300px;
        }
        
        .outcome-icon {
            width: 45px;
            height: 45px;
            background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
        }
        
        .outcome-name-link {
            color: #333;
            text-decoration: none;
            font-weight: 600;
            font-size: 1.1rem;
            transition: color 0.3s ease;
        }
        
        .outcome-name-link:hover {
            color: var(--primary-color);
        }
        
        .performance-metric {
            min-width: 120px;
        }
        
        .progress-bar-modern {
            height: 8px;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            overflow: hidden;
            position: relative;
        }
        
        .progress-fill-modern {
            height: 100%;
            border-radius: 10px;
            transition: width 1.5s ease-out;
            position: relative;
        }
        
        .progress-fill-modern::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            animation: shimmer 2s infinite;
        }
        
        @@keyframes shimmer {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }
        
        .weight-badge, .framework-badge {
            display: flex;
            justify-content: center;
        }
        
        .action-buttons {
            gap: 5px;
        }
        
        .action-btn {
            width: 35px;
            height: 35px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            border-width: 1px;
        }
        
        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        
        .table-responsive {
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        
        .swal2-modern {
            border-radius: 15px;
        }
        
        /* Badge styling */
        .badge.bg-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark)) !important;
        }
        
        .badge.bg-success {
            background: linear-gradient(135deg, var(--secondary-color), var(--primary-light)) !important;
        }
        
        .badge.bg-info {
            background: linear-gradient(135deg, var(--accent-color), var(--primary-color)) !important;
        }
        
        .badge.bg-secondary {
            background: linear-gradient(135deg, #6c757d, #495057) !important;
            color: white !important;
        }
        
        /* Form styling */
        .form-control-lg {
            border: 2px solid rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            transition: all 0.3s ease;
        }
        
        .form-control-lg:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem color-mix(in srgb, var(--primary-color) 25%, transparent);
        }
        
        /* Responsive Design */
        @@media (max-width: 768px) {
            .dashboard-header .d-flex {
                flex-direction: column;
                align-items: stretch;
                gap: 20px;
            }
            
            .dashboard-header .d-flex > div:last-child {
                align-self: center;
            }
            
            .outcome-name-cell {
                min-width: auto;
            }
            
            .performance-metric {
                min-width: auto;
            }
            
            .action-buttons {
                flex-direction: column;
                gap: 3px;
            }
            
            .table-header th {
                padding: 15px 10px;
                font-size: 0.85rem;
            }
            
            .table-row td {
                padding: 15px 10px;
            }
            
            .header-link {
                flex-direction: column;
                text-align: center;
            }
            
            .header-link i {
                margin-bottom: 5px;
                margin-right: 0 !important;
            }
        }
    </style>
}