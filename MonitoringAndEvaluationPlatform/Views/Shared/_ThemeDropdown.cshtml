@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<!-- Beautiful Theme Dropdown -->
<div class="theme-dropdown-container">
    <div class="dropdown">
        <button class="btn btn-outline-light dropdown-toggle theme-dropdown-btn" type="button" id="themeDropdownButton" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="fas fa-palette me-2"></i>
            <span class="d-none d-md-inline">@Localizer["Theme"]</span>
        </button>
    <div class="dropdown-menu dropdown-menu-end theme-dropdown-menu" aria-labelledby="themeDropdown">
        <div class="dropdown-header d-flex align-items-center">
            <i class="fas fa-paint-brush me-2"></i>
            @Localizer["Choose Theme"]
        </div>
        <div class="dropdown-divider"></div>
        
        <div class="theme-option" data-theme="default">
            <div class="theme-preview">
                <div class="theme-colors">
                    <div class="color-circle theme-default"></div>
                    <div class="color-circle theme-default"></div>
                    <div class="color-circle theme-default"></div>
                </div>
                <div class="theme-info">
                    <div class="theme-name">@Localizer["Default Theme"]</div>
                    <div class="theme-description">@Localizer["Original dark green & gold"]</div>
                </div>
            </div>
            <div class="theme-check">
                <i class="fas fa-check"></i>
            </div>
        </div>

        <div class="theme-option" data-theme="calm-blue">
            <div class="theme-preview">
                <div class="theme-colors">
                    <div class="color-circle theme-calm-blue"></div>
                    <div class="color-circle theme-calm-blue"></div>
                    <div class="color-circle theme-calm-blue"></div>
                </div>
                <div class="theme-info">
                    <div class="theme-name">@Localizer["Calm Blue"]</div>
                    <div class="theme-description">@Localizer["Soothing blues & grays"]</div>
                </div>
            </div>
            <div class="theme-check">
                <i class="fas fa-check"></i>
            </div>
        </div>

        <div class="theme-option" data-theme="alternative">
            <div class="theme-preview">
                <div class="theme-colors">
                    <div class="color-circle theme-alternative"></div>
                    <div class="color-circle theme-alternative"></div>
                    <div class="color-circle theme-alternative"></div>
                </div>
                <div class="theme-info">
                    <div class="theme-name">@Localizer["Earth Tones"]</div>
                    <div class="theme-description">@Localizer["Warm earth & sage"]</div>
                </div>
            </div>
            <div class="theme-check">
                <i class="fas fa-check"></i>
            </div>
        </div>
    </div>
</div>


<script>
document.addEventListener('DOMContentLoaded', function() {
    const themeOptions = document.querySelectorAll('.theme-option');
    const currentTheme = localStorage.getItem('selected-theme') || 'default';
    
    // Set initial active theme
    updateActiveTheme(currentTheme);
    
    themeOptions.forEach(option => {
        option.addEventListener('click', function() {
            const selectedTheme = this.getAttribute('data-theme');
            
            // Update theme
            document.documentElement.setAttribute('data-theme', selectedTheme);
            localStorage.setItem('selected-theme', selectedTheme);
            
            // Update active state
            updateActiveTheme(selectedTheme);
            
            // Close dropdown
            const dropdown = bootstrap.Dropdown.getInstance(document.getElementById('themeDropdownButton'));
            if (dropdown) {
                dropdown.hide();
            }
        });
    });
    
    function updateActiveTheme(theme) {
        themeOptions.forEach(option => {
            option.classList.remove('active');
            if (option.getAttribute('data-theme') === theme) {
                option.classList.add('active');
            }
        });
    }
});
</script>