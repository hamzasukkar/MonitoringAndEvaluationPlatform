@model MonitoringAndEvaluationPlatform.Models.LogicalFramework
@using MonitoringAndEvaluationPlatform.Enums
@{
	ViewData["Title"] = "Logical Framework";
	Layout = "~/Views/Shared/_ProjectsLayout.cshtml";
}
<head>
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<style>
		:root {
			--primary-color: #0d6efd;
			--hover-color: rgba(13, 110, 253, 0.1);
			--border-radius: 0.375rem;
		}

		.project-nav .nav-link {
			color: #495057;
			font-weight: 500;
			padding: 0.75rem 1rem;
			transition: all 0.3s ease;
			position: relative;
		}

			.project-nav .nav-link:hover {
				color: var(--primary-color);
				background-color: var(--hover-color);
			}

			.project-nav .nav-link.active {
				color: var(--primary-color);
			}

				.project-nav .nav-link.active:after {
					content: '';
					position: absolute;
					bottom: 0;
					left: 50%;
					transform: translateX(-50%);
					width: 80%;
					height: 3px;
					background-color: var(--primary-color);
					border-radius: 3px 3px 0 0;
				}

		.card {
			border: none;
			box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
			border-radius: var(--border-radius);
			margin-bottom: 1.5rem;
		}

		.card-header {
			background-color: #f8f9fa;
			border-bottom: 1px solid rgba(0, 0, 0, 0.05);
			font-weight: 600;
			padding: 1rem 1.25rem;
		}

		.form-control:focus {
			border-color: var(--primary-color);
			box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
		}

		.btn-primary {
			background-color: var(--primary-color);
			border-color: var(--primary-color);
		}

		.table {
			border-radius: var(--border-radius);
			overflow: hidden;
		}

			.table th {
				background-color: #f8f9fa;
				font-weight: 600;
			}

		.action-icons a {
			display: inline-block;
			margin: 0 5px;
			transition: transform 0.2s;
		}

			.action-icons a:hover {
				transform: scale(1.2);
				text-decoration: none;
			}

		.empty-state {
			text-align: center;
			padding: 2rem;
			background-color: #f8f9fa;
			border-radius: var(--border-radius);
		}

			.empty-state i {
				font-size: 2.5rem;
				color: #6c757d;
				margin-bottom: 1rem;
			}
	</style>

</head>

@if (TempData["Success"] != null)
{
	<div class="alert alert-success alert-dismissible fade show" role="alert">
		<i class="fas fa-check-circle me-2"></i>@TempData["Success"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}


<div class="project-nav mb-4">
	<nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm rounded">
		<div class="container-fluid">
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#projectNavbar">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="projectNavbar">
				<ul class="navbar-nav nav-fill w-100">
					<li class="nav-item">
						<a asp-controller="Projects" asp-action="Details" asp-route-id="@Model.ProjectID" class="nav-link">
							<i class="fas fa-project-diagram me-2"></i>Project
						</a>
					</li>
					<li class="nav-item">
						<a asp-controller="Projects" asp-action="LinkProjectToIndicators" asp-route-projectId="@Model.ProjectID" class="nav-link">
							<i class="fas fa-link me-2"></i>Alignment
						</a>
					</li>
					<li class="nav-item">
						<a class="nav-link active" aria-current="page" asp-action="Create" asp-controller="LogicalFrameworks" asp-route-projectId="@Model.ProjectID">
							<i class="fas fa-sitemap me-2"></i>Logical Framework
						</a>
					</li>
					<li class="nav-item">
						<a asp-action="ProjectMeasures" asp-controller="Measures" asp-route-id="@Model.ProjectID" class="nav-link">
							<i class="fas fa-ruler-combined me-2"></i>Measures
						</a>
					</li>
					<li class="nav-item">
						<a asp-controller="Plans" asp-action="ProjectPlans" asp-route-id="@Model.ProjectID" class="nav-link">
							<i class="fas fa-calendar-alt me-2"></i>Plans
						</a>
					</li>
					<li class="nav-item">
						<a asp-controller="ActionPlans" asp-action="ActionPlan" asp-route-id="@Model.ProjectID" class="nav-link">
							<i class="fas fa-tasks me-2"></i>Action Plans
						</a>
					</li>
					<li class="nav-item">
						<a asp-action="Index" asp-controller="Activities" asp-route-id="@Model.ProjectID" class="nav-link">
							<i class="fas fa-running me-2"></i>Activities
						</a>
					</li>
				</ul>
			</div>
		</div>
	</nav>
</div>

<div class="row">
	<div class="col-lg-8">
		<div class="card">
			<div class="card-header d-flex justify-content-between align-items-center">
				<span><i class="fas fa-plus-circle me-2"></i>Create New Logical Framework</span>
			</div>
			<div class="card-body">
				<form asp-action="Create">
					<div asp-validation-summary="ModelOnly" class="text-danger"></div>
					<input type="hidden" asp-for="ProjectID" />

					<div class="mb-3">
						<label asp-for="Name" class="form-label"></label>
						<input asp-for="Name" class="form-control" placeholder="Enter framework name" />
						<span asp-validation-for="Name" class="text-danger"></span>
					</div>

					<div class="mb-4">
						<label asp-for="Type" class="form-label"></label>
						<select asp-for="Type" class="form-select">
							@foreach (var type in Enum.GetValues(typeof(LogicalFrameworkType)))
							{
								<option value="@((int)type)">@type</option>
							}
						</select>
					</div>

					<div class="d-flex justify-content-between align-items-center">
						<a asp-action="Index" class="btn btn-outline-secondary">
							<i class="fas fa-arrow-left me-2"></i>Back to List
						</a>
						<button type="submit" class="btn btn-primary">
							<i class="fas fa-save me-2"></i>Create Framework
						</button>
					</div>
				</form>
			</div>
		</div>

		@if (ViewBag.RelatedFrameworks is List<LogicalFramework> frameworks && frameworks.Any())
		{
			<div class="card">
				<div class="card-header">
					<i class="fas fa-list me-2"></i>Existing Logical Frameworks
				</div>
				<div class="card-body p-0">
					<div class="table-responsive">
						<table class="table table-hover mb-0">
							<thead>
								<tr>
									<th>Name</th>
									<th>Type</th>
									<th>Performance</th>
									<th class="text-end">Actions</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var item in frameworks)
								{
									<tr id="row-@item.Code">
										<td>
											<span class="view-mode">@item.Name</span>
											<input type="text" class="form-control edit-mode d-none" value="@item.Name" name="Name" />
										</td>
										<td>@item.Type.ToString()</td>
										<td>
											<div class="d-flex align-items-center">
												<div class="progress flex-grow-1" style="height: 6px;">
													<div class="progress-bar bg-@(item.Performance >= 70 ? "success" : item.Performance >= 40 ? "warning" : "danger")"
														 role="progressbar" style="width: @item.Performance%" aria-valuenow="@item.Performance" aria-valuemin="0" aria-valuemax="100"></div>
												</div>
												<span class="ms-2">@item.Performance%</span>
											</div>
										</td>
										<td class="text-end action-icons">
											<a href="#" class="text-primary edit-btn" data-id="@item.Code" title="Edit">
												<i class="fas fa-edit" style="font-size: 1.1rem;"></i>
											</a>

											<a href="#" class="text-danger delete-btn" data-id="@item.Code" title="Delete">
												<i class="fas fa-trash-alt" style="font-size: 1.1rem;"></i>
											</a>

											<a asp-controller="LogicalFrameworkIndicators" asp-action="Create" asp-route-logicalFrameworkCode="@item.Code" title="Add Indicator" class="text-success">
												<i class="fas fa-plus-circle" style="font-size: 1.1rem;"></i>
											</a>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		}
		else
		{
			<div class="empty-state">
				<i class="fas fa-sitemap"></i>
				<h5 class="mt-2">No Logical Frameworks Found</h5>
				<p class="text-muted">Create your first logical framework to get started</p>
			</div>
		}
	</div>
</div>
<script>
	$(document).ready(function () {
	$('.edit-btn').on('click', function (e) {
		e.preventDefault();

		const rowId = $(this).data('id');
		const row = $('#row-' + rowId);
		const isEditing = row.hasClass('editing');

		if (!isEditing) {
			// Enter edit mode
			row.addClass('editing');
			row.find('.view-mode').addClass('d-none');
			row.find('.edit-mode').removeClass('d-none');
			$(this).html('<i class="fas fa-save" style="font-size: 1.1rem;"></i>');
		} else {
			// Save name via AJAX
			const name = row.find('input[name="Name"]').val();

			$.ajax({
				url: '/LogicalFramework/EditNameInline',
				method: 'POST',
				data: { code: rowId, name: name },
				success: function (response) {
					if (response.success) {
						row.removeClass('editing');
						row.find('.view-mode').removeClass('d-none').text(name);
						row.find('.edit-mode').addClass('d-none');
						$('.edit-btn[data-id="' + rowId + '"]').html('<i class="fas fa-edit" style="font-size: 1.1rem;"></i>');

						Swal.fire({
							icon: 'success',
							title: 'Saved!',
							text: 'The name has been updated successfully.',
							timer: 1500,
							showConfirmButton: false
						});
					} else {
						Swal.fire('Error', response.message, 'error');
					}
				},
				error: function () {
					Swal.fire('Error', 'Something went wrong.', 'error');
				}
			});
		}
	});

		$('.delete-btn').on('click', function (e) {
		e.preventDefault();
		const id = $(this).data('id');

		Swal.fire({
			title: 'Are you sure?',
			text: "This will permanently delete the logical framework.",
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#d33',
			cancelButtonColor: '#6c757d',
			confirmButtonText: 'Yes, delete it!'
		}).then((result) => {
			if (result.isConfirmed) {
							// Perform delete via POST or redirect to delete action
							   $.ajax({
					url: '/LogicalFrameworks/Delete/' + id,
					type: 'GET',
					success: function () {
						$('#row-' + id).remove();
						Swal.fire('Deleted!', 'The item has been removed.', 'success');
					},
					error: function () {
						Swal.fire('Error!', 'Could not delete item.', 'error');
					}
				});

			}
		});
	});

		});
</script>
@* @section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
} *@