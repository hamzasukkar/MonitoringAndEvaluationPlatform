@model IEnumerable<MonitoringAndEvaluationPlatform.Models.Ministry>
@using MonitoringAndEvaluationPlatform.Helpers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Localization

@{
    ViewData["Title"] = "Ministries";
    Layout = "~/Views/Shared/_SetUpLayout.cshtml";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
           @*  <h4 class="mb-0">@Localizer["Ministries Management"]</h4>
            <p class="text-muted mb-0">@Localizer["View and manage all ministry performance metrics"]</p> *@
        </div>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>@Localizer["Create a New Entity"]
        </a>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>@Localizer["Ministry Name"]</th>
                            <th>@Localizer["Indicators Performance"]</th>
                            <th>@Localizer["Disbursement Performance"]</th>
                            <th class="text-end">@Localizer["Actions"]</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            string indicatorsClass = ProgressBarHelper.GetProgressBarClass(item.IndicatorsPerformance);
                            string disbursementClass = ProgressBarHelper.GetProgressBarClass(item.DisbursementPerformance);
                            string fieldMonitoringClass = ProgressBarHelper.GetProgressBarClass(item.FieldMonitoring);
                            string impactAssessmentClass = ProgressBarHelper.GetProgressBarClass(item.ImpactAssessment);
                            double IndicatorsPerformance = Math.Round(item.IndicatorsPerformance, 0);

                            <tr>
                                <td>
                                    <strong>@Html.DisplayFor(modelItem => item.MinistryDisplayName)</strong>
                                </td>
                                <td>
                                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(IndicatorsPerformance, indicatorsClass))
                                </td>
                                <td>
                                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(item.DisbursementPerformance, disbursementClass))
                                </td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@item.Code" class="btn btn-sm btn-outline-warning" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Code" class="btn btn-sm btn-outline-danger" title="Delete">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


