@model IEnumerable<MonitoringAndEvaluationPlatform.Models.Ministry>
@using MonitoringAndEvaluationPlatform.Helpers

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_SetUpLayout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MinistryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IndicatorsPerformance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DisbursementPerformance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FieldMonitoring)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImpactAssessment)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            string indicatorsClass = ProgressBarHelper.GetProgressBarClass(item.IndicatorsPerformance);
            string disbursementClass = ProgressBarHelper.GetProgressBarClass(item.DisbursementPerformance);
            string fieldMonitoringClass = ProgressBarHelper.GetProgressBarClass(item.FieldMonitoring);
            string impactAssessmentClass = ProgressBarHelper.GetProgressBarClass(item.ImpactAssessment);
            double IndicatorsPerformance = Math.Round(item.IndicatorsPerformance, 2);

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.MinistryName)
                </td>
                <td>
                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(IndicatorsPerformance, indicatorsClass))
                </td>
                <td>
                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(item.DisbursementPerformance, disbursementClass))
                </td>
                <td>
                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(item.FieldMonitoring, fieldMonitoringClass))
                </td>
                <td>
                    @await Html.PartialAsync("_ProgressBar", Tuple.Create(item.ImpactAssessment, impactAssessmentClass))
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Code">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Code">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Code">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
