@model List<MonitoringAndEvaluationPlatform.ViewModel.ActivityPlanViewModel>
@{
    ViewData["Title"] = "ActionPlan";
    Layout = "~/Views/Shared/_ProjectsLayout.cshtml";
    int projectTotalPlannedCost = 0; // For project total
    int projectTotalRealisedCost = 0; // For project total
}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Financial Cost Table</title>
    <style>
        /* Styles from previous answer are perfect here */
        .editable-cell {
            cursor: pointer;
        }

            .editable-cell[contenteditable="true"]:focus {
                background-color: lightyellow;
                outline: 2px solid #007bff;
            }

        td.saving {
            background-color: #f0ad4e !important;
        }

        td.success {
            background-color: #d4edda !important;
            transition: background-color 1s ease-out;
        }

        td.error {
            background-color: #f8d7da !important;
        }
    </style>
</head>

<div class="project-nav mb-4">
    <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm rounded">
        <div class="container-fluid">
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#projectNavbar">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="projectNavbar">
                <ul class="navbar-nav nav-fill w-100">
                    <li class="nav-item">
                        <a asp-controller="Projects" asp-action="Details" asp-route-id="@ViewBag.ProjectID" class="nav-link">
                            <i class="fas fa-project-diagram me-2"></i>Project
                        </a>
                    </li>
                    <li class="nav-item">
                        <a asp-action="LinkProjectToIndicators" asp-route-projectId="@ViewBag.ProjectID" class="nav-link">
                            <i class="fas fa-link me-2"></i>Alignement
                        </a>
                    </li>
                    <li class="nav-item">
                        <a asp-action="Create" asp-controller="LogicalFrameworks" asp-route-projectId="@ViewBag.ProjectID" class="nav-link">
                            <i class="fas fa-sitemap me-2"></i>LogicalFramework
                        </a>
                    </li>
                    <li class="nav-item">
                        <a asp-action="ProjectMeasures" asp-controller="Measures" asp-route-id="@ViewBag.ProjectID" class="nav-link">
                            <i class="fas fa-ruler-combined me-2"></i>Measures
                        </a>
                    </li>
                    <li class="nav-item">
                        <a asp-controller="Plans" asp-action="ProjectPlans" asp-route-id="@ViewBag.ProjectID" class="nav-link">
                            <i class="fas fa-calendar-alt me-2"></i>Plans
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page">
                            <i class="fas fa-tasks me-2"></i>Action Plans
                        </a>
                    </li>
                    <li class="nav-item">
                        <a asp-action="Index" asp-controller="Activities" asp-route-id="@ViewBag.ProjectID" class="nav-link">
                            <i class="fas fa-running me-2"></i>Activities
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</div>

<table border="1" width="100%">
    <thead>
        <tr style="background-color: #004080; color: white;">
            <th>Activity Name</th>
            <th>Framework</th>
            @if (Model.Any())
            {
                @for (int i = 1; i <= Model.Max(m => m.PlansCount); i++)
                {
                    <th>P @i</th>
                }
            }
            <th>Total Estimated Cost ($)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var activityGroup in Model)
        {
            <tr style="background-color: #cccccc;">
                <td colspan="@(3 + activityGroup.PlansCount)"><strong>@activityGroup.ActivityType</strong></td>
            </tr>

            @foreach (var activity in activityGroup.Activities)
            {
                <tr>
                    <td rowspan="3">@activity.ActivityName</td>
                    <td>Date</td>
                    @foreach (var plan in activity.Plans)
                    {
                        <td>@plan.Date.ToString("yyyy-MM-dd")</td>
                    }
                    <td>-</td>
                </tr>

                <tr>
                    <td>planned</td>
                    @foreach (var plan in activity.Plans)
                    {
                        <td class="editable-cell" contenteditable="true"
                            data-plan-code="@plan.PlanCode"
                            data-value-type="Planned">
                            @plan.PlannedValue
                        </td>
                    }
                    <td>@activity.TotalEstimatedCost</td>
                </tr>

                <tr>
                    <td>realised</td>
                    @foreach (var plan in activity.Plans)
                    {
                        <td class="editable-cell" contenteditable="true"
                            data-plan-code="@plan.PlanCode"
                            data-value-type="Realised">
                            @plan.RealisedValue
                        </td>
                    }
                    <td>@activity.TotalRealisedCost</td>
                </tr>
            }

            <tr style="font-weight: bold;">
                <td colspan="2">Subtotal Planned</td>
                @for (int i = 0; i < activityGroup.PlansCount; i++)
                {
                    <td>@activityGroup.Activities.Sum(a => a.Plans.Count > i ? a.Plans[i].PlannedValue : 0)</td>
                }
                <td>@activityGroup.Activities.Sum(a => a.TotalEstimatedCost)</td>
            </tr>
            <tr style="font-weight: bold;">
                <td colspan="2">Subtotal Realised</td>
                @for (int i = 0; i < activityGroup.PlansCount; i++)
                {
                    <td>@activityGroup.Activities.Sum(a => a.Plans.Count > i ? a.Plans[i].RealisedValue : 0)</td>
                }
                <td>@activityGroup.Activities.Sum(a => a.TotalRealisedCost)</td>
            </tr>
            
           
                projectTotalPlannedCost += activityGroup.Activities.Sum(a => a.TotalEstimatedCost);
               projectTotalRealisedCost += activityGroup.Activities.Sum(a => a.TotalRealisedCost);
            }
        }

        <tr style="background-color: #004080; color: white; font-weight: bold;">
            <td colspan="@(2 + (Model.Any() ? Model.Max(m=>m.PlansCount) : 0))">PROJECT TOTAL ESTIMATED COST</td>
            <td>@projectTotalPlannedCost</td>
        </tr>
        <tr style="background-color: #004080; color: white; font-weight: bold;">
            <td colspan="@(2 + (Model.Any() ? Model.Max(m => m.PlansCount) : 0))">PROJECT TOTAL FINANCIAL COST</td>
            <td>@projectTotalRealisedCost</td>
        </tr>
    </tbody>
</table>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        let originalValue;

        // Store original value on focus
        $('.editable-cell').on('focus', function () {
            originalValue = $(this).text().trim();
        });

        // Process update on blur (when clicking away)
        $('.editable-cell').on('blur', function () {
            var cell = $(this);
            var newValue = cell.text().trim();

            // If value hasn't changed, do nothing
            if (newValue === originalValue) {
                return;
            }

            var planCode = cell.data('plan-code');
            var valueType = cell.data('value-type'); // "Planned" or "Realised"

            cell.removeClass('success error').addClass('saving');

            $.ajax({
                url: '@Url.Action("UpdatePlanValue", "Plans")',
                type: 'POST',
                data: {
                    planCode: planCode,
                    valueType: valueType,
                    newValue: newValue
                },
                success: function (response) {
                    if (response.success) {
                        // Simply reload the page to get fresh data from server
                        location.reload();
                    } else {
                        cell.removeClass('saving').addClass('error');
                        cell.text(originalValue); // Revert to original value on failure
                        alert('Error: ' + response.message);
                    }
                },
                error: function () {
                    cell.removeClass('saving').addClass('error');
                    cell.text(originalValue); // Revert on AJAX error
                    alert('A server error occurred. Please try again.');
                }
            });
        });
    });
</script>
