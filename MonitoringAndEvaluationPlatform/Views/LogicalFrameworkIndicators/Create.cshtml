@model MonitoringAndEvaluationPlatform.Models.LogicalFrameworkIndicator
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_ProjectsLayout.cshtml";
    var Date = DateTime.Today.ToString("yyyy-MM-dd");
}
<head>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <style>
        /* Prevent horizontal overflow at root level */
        html, body {
            overflow-x: hidden;
            max-width: 100%;
        }

        /* Table responsive container */
        .table-container {
            width: 100%;
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
            margin-bottom: 1rem;
        }

        /* Table styling */
        .table {
            min-width: 600px; /* Minimum width before scrolling */
            width: 100%;
            margin-bottom: 0;
        }

        /* Form container */
        .form-container {
            max-width: 100%;
            padding: 0 15px;
        }

        /* Navigation and layout fixes */
        .container-fluid {
            padding-right: 0;
            padding-left: 0;
        }

        /* Action icons */
        .action-icons a {
            display: inline-block;
            margin: 0 5px;
        }

        /* Responsive adjustments */
        @@media (min-width: 768px) {
            .form-container {
                padding: 0;
            }

            .table-container {
                padding: 0 15px;
            }
        }
    </style>

</head>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<div class="container-fluid">
    <h1>Create</h1>
    <h4>Creating Logical Framework Indicator for: <strong>@ViewBag.LogicalFrameworkName</strong></h4>
    <hr />

    <div class="row">
        <div class="col-md-4 form-container">
            <form asp-action="Create">
                <input type="hidden" asp-for="LogicalFrameworkCode" />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group mb-3">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Target" class="control-label"></label>
                    <input asp-for="Target" class="form-control" />
                    <span asp-validation-for="Target" class="text-danger"></span>
                </div>
      @*           <div class="form-group mb-3">
                    <label asp-for="TargetYear" class="control-label"></label>
                    <input asp-for="TargetYear" value="@Date" class="form-control" />
                    <span asp-validation-for="TargetYear" class="text-danger"></span>
                </div> *@
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    @if (ViewBag.RelatedIndicators is List<LogicalFrameworkIndicator> indicators && indicators.Any())
    {
        <div class="mt-4">
            <h5>Existing Indicators</h5>
            <div class="table-container">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Name</th>
                    @*         <th>Target</th>
                            <th>Target Year</th> *@
                            <th>Performance</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in indicators)
                        {
                            double performance = Math.Round(item.Performance, 0);
                            <tr id="row-@item.IndicatorCode">
                                <td>
                                    <span class="view-mode">@item.Name</span>
                                    <input type="text" class="form-control edit-mode d-none" name="Name" value="@item.Name" />
                                </td>
                                <td>
                                    <span class="view-mode">@item.Target</span>
                                    <input type="number" class="form-control edit-mode d-none" name="Target" value="@item.Target" />
                                </td>
                      @*           <td>@item.TargetYear.Year</td> *@
                                <td>@performance%</td>
                                <td class="action-icons">
                                    <a href="#" class="edit-btn text-primary" data-id="@item.IndicatorCode" title="Edit">
                                        <i class="bi bi-pencil-square" style="font-size: 1.2rem;"></i>
                                    </a>
                                    <a href="#" class="delete-btn text-danger" data-id="@item.IndicatorCode" title="Delete">
                                        <i class="bi bi-trash" style="font-size: 1.2rem;"></i>
                                    </a>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    }
    else
    {
        <p class="mt-4">No Indicators have been added yet for this Logical Framework.</p>
    }

    <div class="mt-3">
        <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
    </div>
</div>
<script>
    $(document).ready(function () {
        // Edit & Save button
        $('.edit-btn').on('click', function (e) {
            e.preventDefault();
            const id = $(this).data('id');
            const row = $('#row-' + id);
            const isEditing = row.hasClass('editing');

            if (!isEditing) {
                row.addClass('editing');
                row.find('.view-mode').addClass('d-none');
                row.find('.edit-mode').removeClass('d-none');
                $(this).html('<i class="bi bi-save" style="font-size: 1.2rem;"></i>');
            } else {
                const name = row.find('input[name="Name"]').val();
                const target = row.find('input[name="Target"]').val();

                $.ajax({
                    url: '/LogicalFrameworkIndicators/EditInline',
                    method: 'POST',
                    data: { id: id, name: name, target: target },
                    success: function (res) {
                        if (res.success) {
                            row.removeClass('editing');
                            row.find('.view-mode').removeClass('d-none');
                            row.find('.edit-mode').addClass('d-none');
                            row.find('.view-mode').eq(0).text(name);   // Name
                            row.find('.view-mode').eq(1).text(target); // Target
                            $('.edit-btn[data-id="' + id + '"]').html('<i class="bi bi-pencil-square" style="font-size: 1.2rem;"></i>');

                            Swal.fire({
                                icon: 'success',
                                title: 'Saved!',
                                text: 'Indicator updated successfully.',
                                timer: 1500,
                                showConfirmButton: false
                            });
                        } else {
                            Swal.fire('Error', res.message, 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'An error occurred while saving.', 'error');
                    }
                });
            }
        });

        // Delete button
        $('.delete-btn').on('click', function (e) {
            e.preventDefault();
            const id = $(this).data('id');

            Swal.fire({
                title: 'Are you sure?',
                text: "This will permanently delete the indicator.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/LogicalFrameworkIndicators/DeleteConfirmed',
                        method: 'POST',
                        data: { id: id },
                        success: function (res) {
                            if (res.success) {
                                $('#row-' + id).remove();
                                Swal.fire('Deleted!', 'The indicator was removed.', 'success');
                            } else {
                                Swal.fire('Error', res.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Error', 'Deletion failed.', 'error');
                        }
                    });
                }
            });
        });
    });
</script>
