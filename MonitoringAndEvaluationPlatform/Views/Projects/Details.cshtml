@model MonitoringAndEvaluationPlatform.Models.Project
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Localization
@using System.Globalization

@{
    ViewData["Title"] = "Project Details";
    Layout = "~/Views/Shared/_DashboardHomeLayout.cshtml";
    var culture = Context.Features.Get<IRequestCultureFeature>().RequestCulture.Culture.Name;
}

<!-- Dashboard Header -->
<div class="dashboard-header">
    <h1 class="dashboard-title">
        <i class="fas fa-info-circle me-3"></i>
        @Model.ProjectName
    </h1>
    <p class="dashboard-subtitle">
        Comprehensive project overview with performance metrics and detailed information
    </p>
    <div class="dashboard-actions">
        <a asp-action="Edit" asp-route-id="@Model?.ProjectID" class="btn btn-gradient-primary me-2">
            <i class="fas fa-edit me-1"></i>@Localizer["Edit"]
        </a>
        <a asp-action="Index" class="btn btn-light">
            <i class="fas fa-arrow-left me-1"></i>@Localizer["Back to List"]
        </a>
    </div>
</div>

<div class="container-fluid">
    <!-- Project Navigation -->
    <div class="project-nav-modern mb-4">
        <nav class="modern-navbar">
            <div class="navbar-container">
                <button class="navbar-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#projectNavbar">
                    <i class="fas fa-bars"></i>
                </button>
                <div class="collapse navbar-collapse" id="projectNavbar">
                    <ul class="modern-nav-list">
                        <li class="nav-item-modern">
                            <a class="nav-link-modern active" aria-current="page">
                                <i class="fas fa-project-diagram me-2"></i>@Localizer["Project"]
                            </a>
                        </li>
@*                         <li class="nav-item">
                            <a asp-action="LinkProjectToIndicators" asp-route-projectId="@Model.ProjectID" class="nav-link">
                                <i class="fas fa-link me-2"></i>@Localizer["Alignement"]
                            </a>
                        </li>
                        <li class="nav-item">
                            <a asp-action="Create" asp-controller="LogicalFrameworks" asp-route-projectId="@Model.ProjectID" class="nav-link">
                                <i class="fas fa-sitemap me-2"></i>@Localizer["LogicalFramework"]
                            </a>
                        </li> *@
                        <li class="nav-item-modern">
                            @if (Model.ProjectIndicators != null && Model.ProjectIndicators.Any())
                            {
                                var firstIndicator = Model.ProjectIndicators.First();
                                <a asp-action="Index" asp-controller="Measures" asp-route-indicatorId="@firstIndicator.IndicatorCode" class="nav-link-modern" title="@Localizer["View measures for indicator"] [@firstIndicator.IndicatorCode]">
                                    <i class="fas fa-ruler-combined me-2"></i>@Localizer["Measures"]
                                </a>
                            }
                            else
                            {
                                <a asp-action="Index" asp-controller="Measures" class="nav-link-modern" title="@Localizer["No indicators linked to this project yet"]">
                                    <i class="fas fa-ruler-combined me-2"></i>@Localizer["Measures"]
                                </a>
                            }
                        </li>
                     @*    <li class="nav-item">
                            <a asp-controller="Plans" asp-action="ProjectPlans" asp-route-id="@Model.ProjectID" class="nav-link">
                                <i class="fas fa-calendar-alt me-2"></i>Plans
                            </a>
                        </li> *@
                        <li class="nav-item-modern">
                            <a asp-controller="ActionPlans" asp-action="ActionPlan" asp-route-id="@Model.ProjectID" class="nav-link-modern">
                                <i class="fas fa-tasks me-2"></i>@Localizer["Action Plans"]
                            </a>
                        </li>
                     @*    <li class="nav-item">
                            <a asp-action="Index" asp-controller="Activities" asp-route-id="@Model.ProjectID" class="nav-link">
                                <i class="fas fa-running me-2"></i>@Localizer["Activities"]
                            </a>
                        </li> *@
                    </ul>
                </div>
            </div>
        </nav>
    </div>

    <!-- Project Information -->
    <div class="chart-card mb-4">
        <h3 class="chart-title">
            <i class="fas fa-info-circle"></i>
            @Localizer["Project Information"]
        </h3>
        <div class="chart-content">
            <div class="project-details-grid">
                <!-- Basic Info -->
                <div class="info-section">
                    <div class="info-card">
                        <div class="info-header">
                            <i class="fas fa-info-circle me-2"></i>
                            <h5 class="info-title">@Localizer["Basic Information"]</h5>
                        </div>
                        <div class="info-content">
                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-user-tie me-2"></i>
                                    @Localizer["Project Manager"]
                                </div>
                                <div class="info-value">@Html.DisplayFor(model => model.ProjectManager.Name)</div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-user-check me-2"></i>
                                    @Localizer["Supervisor"]
                                </div>
                                <div class="info-value">@Html.DisplayFor(model => model.SuperVisor.Name)</div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-handshake me-2"></i>
                                    @Localizer["Donor"]
                                </div>
                                <div class="info-value">
                                    @foreach (var donor in Model.Donors)
                                    {
                                        <span class="modern-badge badge-primary">
                                            @donor.Partner
                                        </span>
                                    }
                                </div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-building me-2"></i>
                                    @Localizer["Ministry"]
                                </div>
                                <div class="info-value">
                                    @foreach (var ministry in Model.Ministries)
                                    {
                                        <span class="modern-badge badge-primary">
                                            @ministry.MinistryDisplayName
                                        </span>
                                    }
                                </div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-bullseye me-2"></i>
                                    @Localizer["SDGs"]
                                </div>
                                <div class="info-value">
                                    @if (CultureInfo.CurrentUICulture.TwoLetterISOLanguageName == "ar")
                                    {
                                        @Html.DisplayFor(model => model.Goal.AR_Name)
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(model => model.Goal.EN_Name)
                                    }
                                </div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-calendar-alt me-2"></i>
                                    @Localizer["Start Date"]
                                </div>
                                <div class="info-value">@Model.StartDate.ToString("yyyy-MM-dd")</div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-calendar-check me-2"></i>
                                    @Localizer["End Date"]
                                </div>
                                <div class="info-value">@Model.EndDate.ToString("yyyy-MM-dd")</div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-industry me-2"></i>
                                    @Localizer["Sector"]
                                </div>
                                <div class="info-value">
                                    @foreach (var sector in Model.Sectors)
                                    {
                                        <span class="modern-badge badge-secondary me-1">
                                            @if (culture.StartsWith("ar"))
                                            {
                                                @sector.AR_Name
                                            }
                                            else
                                            {
                                                @sector.EN_Name
                                            }
                                        </span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Region Info -->
                <div class="info-section">
                    <div class="info-card">
                        <div class="info-header">
                            <i class="fas fa-map-marker-alt me-2"></i>
                            <h5 class="info-title">@Localizer["Regions Information"]</h5>
                        </div>
                        <div class="info-content">
                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-map me-2"></i>
                                    @Localizer["Governorate"]
                                </div>
                                <div class="info-value">
                                    @foreach (var governorate in Model.Governorates)
                                    {
                                        <span class="modern-badge badge-info me-1">
                                            @governorate.EN_Name
                                        </span>
                                    }
                                </div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-location-arrow me-2"></i>
                                    @Localizer["District"]
                                </div>
                                <div class="info-value">
                                    @foreach (var district in Model.Districts)
                                    {
                                        <span class="modern-badge badge-info me-1">
                                            @district.EN_Name
                                        </span>
                                    }
                                </div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-map-pin me-2"></i>
                                    @Localizer["SubDistrict"]
                                </div>
                                <div class="info-value">
                                    @foreach (var subDistrict in Model.SubDistricts)
                                    {
                                        <span class="modern-badge badge-info me-1">
                                            @subDistrict.EN_Name
                                        </span>
                                    }
                                </div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-users me-2"></i>
                                    @Localizer["Community"]
                                </div>
                                <div class="info-value">
                                    @foreach (var community in Model.Communities)
                                    {
                                        <span class="modern-badge badge-info me-1">
                                            @community.EN_Name
                                        </span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Budget Info -->
                <div class="info-section">
                    <div class="info-card">
                        <div class="info-header">
                            <i class="fas fa-dollar-sign me-2"></i>
                            <h5 class="info-title">@Localizer["Financial Information"]</h5>
                        </div>
                        <div class="info-content">
                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-money-bill-wave me-2"></i>
                                    @Localizer["Estimated Budget"]
                                </div>
                                <div class="info-value">
                                    <span class="budget-amount">@Html.DisplayFor(model => model.EstimatedBudget)</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @{
        double performance = Math.Round(@Model.performance, 0);
    }
    <!-- Performance Metrics -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <h6 class="card-title text-muted">@Localizer["Performance"]</h6>
                    <div class="progress-circle progress-@((int)performance)" data-value="@performance">
                        <span class="progress-circle-value">@performance%</span>
                    </div>
                    <p class="text-muted mt-2 mb-0">@Localizer["Overall project performance"]</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <h6 class="card-title text-muted">@Localizer["Disbursement"]</h6>
                    <div class="progress-circle progress-@((int)Model.DisbursementPerformance)" data-value="@Model.DisbursementPerformance">
                        <span class="progress-circle-value">@Model.DisbursementPerformance%</span>
                    </div>
                    <p class="text-muted mt-2 mb-0">@Localizer["Budget utilization"]</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <h6 class="card-title text-muted">@Localizer["Field Monitoring"]</h6>
                    <div class="progress-circle progress-@((int)Model.FieldMonitoring)" data-value="@Model.FieldMonitoring">
                        <span class="progress-circle-value">@Model.FieldMonitoring%</span>
                    </div>
                    <p class="text-muted mt-2 mb-0">@Localizer["Field activities completion"]</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <h6 class="card-title text-muted">@Localizer["Impact Assessment"]</h6>
                    <div class="progress-circle progress-@((int)Model.ImpactAssessment)" data-value="@Model.ImpactAssessment">
                        <span class="progress-circle-value">@Model.ImpactAssessment%</span>
                    </div>
                    <p class="text-muted mt-2 mb-0">@Localizer["Impact measurement"]</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Project Files Section -->
    <div class="chart-card mb-4">
        <h3 class="chart-title">
            <i class="fas fa-file-alt"></i>
            @Localizer["Uploaded Files"]
        </h3>
        <div class="chart-content">
            @if (Model.ProjectFiles != null && Model.ProjectFiles.Any())
            {
                <div class="modern-table-container">
                    <table class="modern-table">
                        <thead class="table-header">
                            <tr>
                                <th><i class="fas fa-hashtag me-2"></i>#</th>
                                <th><i class="fas fa-file me-2"></i>@Localizer["File Name"]</th>
                                <th class="text-center"><i class="fas fa-cogs me-2"></i>@Localizer["Actions"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.ProjectFiles.Count; i++)
                            {
                                var file = Model.ProjectFiles.ElementAt(i);
                                <tr class="table-row">
                                    <td>@(i + 1)</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="file-icon me-3">
                                                <i class="fas fa-file-alt"></i>
                                            </div>
                                            <span class="file-name">@file.FileName</span>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group action-buttons" role="group">
                                            <a asp-action="DownloadFile" asp-route-id="@file.Id" class="btn btn-outline-success btn-sm action-btn" title="@Localizer["Download"]">
                                                <i class="fas fa-download"></i>
                                            </a>
                                            <button type="button" class="btn btn-outline-danger btn-sm action-btn"
                                                    onclick="deleteFile(@file.Id, '@file.FileName')" title="@Localizer["Delete"]">
                                                <i class="fas fa-trash-alt"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-icon">
                        <i class="fas fa-folder-open"></i>
                    </div>
                    <h5 class="empty-title">@Localizer["No Files Found"]</h5>
                    <p class="empty-text">@Localizer["No files uploaded for this project."]</p>
                </div>
            }
        </div>
    </div>
</div>



@section Scripts {
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        /* Project Details Grid */
        .project-details-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        /* Info Section Styling */
        .info-section {
            background: transparent;
        }

        .info-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: all 0.3s ease;
            height: 100%;
        }

        .info-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

        .info-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            color: white;
            padding: 1.5rem;
            display: flex;
            align-items: center;
        }

        .info-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin: 0;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .info-content {
            padding: 1.5rem;
        }

        .info-row {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            padding: 1rem 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

        .info-row:last-child {
            border-bottom: none;
        }

        .info-label {
            font-weight: 600;
            color: #6c757d;
            min-width: 140px;
            display: flex;
            align-items: center;
            font-size: 0.9rem;
        }

        .info-value {
            flex: 1;
            margin-left: 1rem;
            color: #333;
            font-weight: 500;
        }

        .modern-badge {
            display: inline-flex;
            align-items: center;
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            margin: 0.2rem;
            transition: all 0.3s ease;
        }

        .badge-primary {
            background: linear-gradient(45deg, var(--primary-color), var(--primary-light));
            color: white;
        }

        .badge-secondary {
            background: linear-gradient(45deg, #6c757d, #adb5bd);
            color: white;
        }

        .badge-info {
            background: linear-gradient(45deg, #17a2b8, #20c997);
            color: white;
        }

        .budget-amount {
            font-size: 1.2rem;
            font-weight: 700;
            color: var(--primary-color);
        }

        /* Modern Navigation */
        .project-nav-modern {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        }

        .modern-navbar {
            padding: 1rem 0;
        }

        .modern-nav-list {
            display: flex;
            list-style: none;
            margin: 0;
            padding: 0;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .nav-item-modern {
            margin: 0;
        }

        .nav-link-modern {
            display: flex;
            align-items: center;
            padding: 0.75rem 1.5rem;
            color: #6c757d;
            text-decoration: none;
            border-radius: 10px;
            font-weight: 500;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.7);
            border: 1px solid rgba(0, 0, 0, 0.1);
        }

        .nav-link-modern:hover {
            background: linear-gradient(45deg, var(--primary-color), var(--primary-light));
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .nav-link-modern.active {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            color: white;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        /* Progress Circles */
        .progress-circle {
            position: relative;
            width: 100px;
            height: 100px;
            margin: 0 auto;
            border-radius: 50%;
            background: conic-gradient(var(--progress-color) calc(var(--value)*1%), #e9ecef 0%);
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .progress-circle::before {
            content: "";
            position: absolute;
            width: 80px;
            height: 80px;
            background: white;
            border-radius: 50%;
            box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .progress-circle-value {
            position: relative;
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--progress-color);
            z-index: 1;
        }

        /* Color coding for progress circles */
        .progress-0-50 {
            --progress-color: #dc3545;
        }

        .progress-51-75 {
            --progress-color: #ffc107;
        }

        .progress-76-100 {
            --progress-color: #28a745;
        }

        /* Files Table Styling */
        .modern-table {
            width: 100%;
            background: transparent;
            border: none;
            border-radius: 15px;
            overflow: hidden;
        }

        .table-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            color: white;
        }

        .table-header th {
            border: none;
            padding: 20px 15px;
            font-weight: 600;
            font-size: 0.95rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .table-row {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: none;
            transition: all 0.3s ease;
        }

        .table-row:hover {
            background: rgba(255, 255, 255, 1);
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

        .table-row td {
            border: none;
            padding: 20px 15px;
            vertical-align: middle;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

        .file-icon {
            width: 40px;
            height: 40px;
            background: linear-gradient(45deg, #17a2b8, #20c997);
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.1rem;
        }

        .file-name {
            font-weight: 600;
            color: #333;
        }

        .action-btn {
            width: 35px;
            height: 35px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            border-width: 1px;
        }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .modern-table-container {
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 3rem 2rem;
            color: #6c757d;
        }

        .empty-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .empty-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #495057;
        }

        .empty-text {
            font-size: 1rem;
            margin: 0;
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .project-details-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .modern-nav-list {
                flex-direction: column;
                gap: 0.5rem;
            }

            .info-row {
                flex-direction: column;
                align-items: flex-start;
            }

            .info-label {
                min-width: auto;
                margin-bottom: 0.5rem;
            }

            .info-value {
                margin-left: 0;
            }
        }
    </style>

    <script>
        // Initialize progress circles
        document.querySelectorAll('.progress-circle').forEach(circle => {
            const value = circle.getAttribute('data-value');
            circle.style.setProperty('--value', value);

            // Apply color class based on value
            if (value <= 50) {
                circle.classList.add('progress-0-50');
            } else if (value <= 75) {
                circle.classList.add('progress-51-75');
            } else {
                circle.classList.add('progress-76-100');
            }
        });

        // Delete file function
        function deleteFile(fileId, fileName) {
            Swal.fire({
                title: '@Localizer["Are you sure?"]',
                text: `@Localizer["This will delete the file"]: ${fileName}`,
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: '@Localizer["Cancel"]',
                confirmButtonText: '@Localizer["Yes, delete it!"]',
                reverseButtons: true,
                confirmButtonColor: 'var(--danger-color)',
                cancelButtonColor: 'var(--secondary-color)',
                customClass: {
                    popup: 'modern-swal-popup',
                    title: 'modern-swal-title'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    // Create a form and submit it
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = '/Projects/DeleteFile/' + fileId;

                    // Add anti-forgery token
                    const token = document.querySelector('input[name="__RequestVerificationToken"]');
                    if (token) {
                        const tokenInput = document.createElement('input');
                        tokenInput.type = 'hidden';
                        tokenInput.name = '__RequestVerificationToken';
                        tokenInput.value = token.value;
                        form.appendChild(tokenInput);
                    }

                    document.body.appendChild(form);
                    form.submit();
                }
            });
        }

        // Add loading animation on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Animate info cards
            const infoCards = document.querySelectorAll('.info-card');
            infoCards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = 'all 0.6s ease';

                setTimeout(() => {
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 150);
            });

            // Animate progress circles
            const progressCircles = document.querySelectorAll('.progress-circle');
            progressCircles.forEach(circle => {
                setTimeout(() => {
                    circle.style.transform = 'scale(1.1)';
                    setTimeout(() => {
                        circle.style.transform = 'scale(1)';
                    }, 200);
                }, 800);
            });
        });
    </script>
}
