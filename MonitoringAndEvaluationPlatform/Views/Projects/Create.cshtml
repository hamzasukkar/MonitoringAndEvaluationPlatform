@model MonitoringAndEvaluationPlatform.ViewModel.ProjectWithMeasuresViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Localization
@using MonitoringAndEvaluationPlatform.Enums
@using MonitoringAndEvaluationPlatform.Models

@{
    ViewData["Title"] = "Create New Project";
    Layout = "~/Views/Shared/_ProjectsLayout.cshtml";

    var startDate = DateTime.Today.ToString("yyyy-MM-dd");
    var endDate = DateTime.Today.ToString("yyyy-MM-dd");

    var governorates = ViewBag.Governorates as List<Governorate>;
}
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0"></h5>
                        <dl class="row">@Localizer["Create New Project"]
                    </h4>
                    <p class="mb-0 opacity-75">@Localizer["Fill in the project details below"]</p>
                </div>

                <!-- Display Validation Summary -->
                @if (!ViewData.ModelState.IsValid)
                {
                    <div asp-validation-summary="All" class="alert alert-danger"></div>
                }

                <form asp-action="Create" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                    <div class="card-body">
                        <div class="row">
                            <!-- Left Column -->
                            <div class="col-md-6">
                                <h5 class="mb-3 text-primary">@Localizer["Basic Information"]</h5>

                                <!-- Project Name -->
                                <div class="mb-4">
                                    <label asp-for="Project.ProjectName" class="form-label">@Localizer["Project Name"]</label>
                                    <input asp-for="Project.ProjectName" class="form-control" placeholder="Enter project name" required />
                                    <span asp-validation-for="Project.ProjectName" class="text-danger small"></span>
                                </div>

                                <!-- NEW: Plans Count for ActionPlan -->
                                <div class="mb-4">
                                    <label for="PlansCount" class="form-label">@Localizer["Plans Count"]</label>
                                    <input type="number"
                                           id="PlansCount"
                                           name="PlansCount"
                                           class="form-control"
                                           value="6"
                                           min="1"
                                           required />
                                   @*  <span asp-validation-for="PlansCount" class="text-danger small"></span> *@
                                </div>

                                <!-- Location Hierarchy -->
                                <div class="mb-4">
                                    <h6 class="mb-3 text-muted">@Localizer["Project Location"]</h6>
                                    <div id="location-selector">

                                        <div class="mb-3">
                                            <select id="governorate" class="form-select">
                                                <option value="">-- اختر المحافظة --</option>
                                                @foreach (var gov in governorates)
                                                {
                                                    var displayName = System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName == "ar"
                                                    ? gov.AR_Name
                                                    : gov.EN_Name;
                                                    <option value="@gov.Code">@displayName</option>
                                                }
                                            </select>
                                        </div>

                                    <div class="mb-3">
                                        <select id="district" class="form-select"></select>
                                    </div>

                                    <div class="mb-3">
                                        <select id="subdistrict" class="form-select"></select>
                                    </div>

                                    <div class="mb-3">
                                        <select id="community" class="form-select"></select>
                                    </div>
                                    </div>
                                    <button type="button" id="add-location" class="btn btn-primary mt-2">@Localizer["Add Location"]</button>
                                    <button type="button" id="reset-dropdowns" class="btn btn-secondary mt-2">@Localizer["Reset"]</button>
                                    <ul id="selected-locations" class="mt-3"></ul>

                                    <input type="hidden" id="location-data" name="selections" />
                                    <div id="location-validation-alert" style="display:none;" class="alert alert-warning mt-3"></div>
                                </div>

                                   

                                
                                    
                                   
                                <!-- Dates -->
                                <div class="mb-4">
                                    <h6 class="mb-3 text-muted">@Localizer["Project Timeline"]</h6>
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label asp-for="Project.StartDate" class="form-label">@Localizer["Start Date"]</label>
                                            <input type="date" asp-for="Project.StartDate" value="@startDate" class="form-control" required />
                                            <span asp-validation-for="Project.StartDate" class="text-danger small"></span>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label asp-for="Project.EndDate" class="form-label">@Localizer["End Date"]</label>
                                            <input type="date" asp-for="Project.EndDate" value="@endDate" class="form-control" required />
                                            <span asp-validation-for="Project.EndDate" class="text-danger small"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                         

                            <!-- Right Column -->
                            <div class="col-md-6">
                                <!-- Budget Card -->
                                <div class="card mb-4 border-0 shadow-sm">
                                    <div class="card-header bg-light">
                                        <h6 class="mb-0">@Localizer["Budget Information"]</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label asp-for="Project.EstimatedBudget" class="form-label">@Localizer["Estimated Budget"]</label>
                                                <div class="input-group">
                                                    <span class="input-group-text">$</span>
                                                    <input asp-for="Project.EstimatedBudget" class="form-control" min="0.01" step="0.01" required />
                                                </div>
                                                <span asp-validation-for="Project.EstimatedBudget" class="text-danger small"></span>
                                            </div>
@*                                             <div class="col-md-6 mb-3">
                                                <label asp-for="Project.RealBudget" class="form-label">@Localizer["Real Budget"]</label>
                                                <div class="input-group">
                                                    <span class="input-group-text">$</span>
                                                    <input asp-for="Project.RealBudget" value="0" class="form-control" />
                                                </div>
                                                <span asp-validation-for="Project.RealBudget" class="text-danger small"></span>
                                            </div>
 *@                                        </div>
                                    </div>
                                </div>

                                <!-- Stakeholders Card -->
                                <div class="card mb-4 border-0 shadow-sm">
                                    <div class="card-header bg-light">
                                        <h6 class="mb-0">@Localizer["Stakeholders"]</h6>
                                    </div>
                                    <!-- Sectors -->
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <label class="form-label">@Localizer["Sectors"]</label>
                                            <select asp-for="Project.Sectors"  class="form-select" asp-items="ViewBag.SectorList" multiple size="4">
                                                <option disabled>@Localizer["Select one or more sectors"]</option>
                                            </select>
                                            <small class="text-muted">@Localizer["Hold Ctrl/Cmd to select multiple sectors"]</small>
                                        </div>
                                        <div class="mb-3">
                                            <label asp-for="Project.ProjectManagerCode" class="form-label">@Localizer["Project Manager"]</label>
                                            <select asp-for="Project.ProjectManagerCode" class="form-select" asp-items="ViewBag.ProjectManager">
                                                <option value="">Select Project Manager</option>
                                            </select>
                                        </div>

                                        <div class="mb-3">
                                            <label asp-for="Project.SuperVisorCode" class="form-label">@Localizer["Supervisor"]</label>
                                            <select asp-for="Project.SuperVisorCode" class="form-select" asp-items="ViewBag.SuperVisor">
                                                <option value="">Select Supervisor</option>
                                            </select>
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-label">@Localizer["Ministries"]</label>
                                            <select asp-for="Project.Ministries" class="form-select" asp-items="ViewBag.MinistryList" multiple size="4">
                                                <option disabled>@Localizer["Select one or more ministry"]</option>
                                            </select>
                                            <small class="text-muted">@Localizer["Hold Ctrl/Cmd to select multiple ministry"]</small>
                                        </div>

                                        <div class="mb-3">
                                            <label asp-for="Project.GoalCode" class="form-label">@Localizer["SDGs"]</label>
                                            <select asp-for="Project.GoalCode" class="form-select" asp-items="ViewBag.Goals">
                                                <option value="">@Localizer["SDGs"]</option>
                                            </select>
                                        </div>

                                       @*  To Check *@
                                        <div class="mb-3">
                                            <label class="form-label">@Localizer["Donor"]</label>
                                            <select asp-for="Project.Donors" class="form-select" asp-items="ViewBag.Donor" multiple size="4">
                                                <option disabled>@Localizer["Select one or more donor"]</option>
                                            </select>
                                            <small class="text-muted">@Localizer["Hold Ctrl/Cmd to select multiple donor"]</small>
                                        </div>

                                    </div>
                                </div>

                                <!-- Target Measures -->
                                <div class="card border-0 shadow-sm mb-4">
                                    <div class="card-header bg-light d-flex justify-content-between align-items-center">
                                        <h6 class="mb-0">@Localizer["Target Measures"]</h6>
                                        <button type="button" class="btn btn-sm btn-primary" onclick="addMeasureRow()">
                                            <i class="fas fa-plus"></i> @Localizer["Add Measure"]
                                        </button>
                                    </div>
                                    <div class="card-body">
                                        <div id="measures-container">
                                            <!-- Measure rows will be added here dynamically -->
                                        </div>
                                        <div class="text-muted small">
                                            <i class="fas fa-info-circle"></i> @Localizer["Add target measures for your project indicators. These will be used to track project performance."]
                                        </div>
                                    </div>
                                </div>

                                <!-- Files Upload -->
                                <div class="card border-0 shadow-sm">
                                    <div class="card-header bg-light">
                                        <h6 class="mb-0">@Localizer["Project Documents"]</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <label class="form-label">@Localizer["Upload Files"]</label>
                                            <input type="file" name="UploadedFiles" multiple class="form-control" />
                                            <small class="text-muted">Maximum file size: 10MB. Allowed types: PDF, DOC, XLS, JPG, PNG</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card-footer bg-light d-flex justify-content-between">
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i>@Localizer["Cancel"]
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>@Localizer["Create Project"]
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<partial name="_ValidationScriptsPartial" />

<script>
    let selections = [];

    // Cascading dropdowns
    $("#governorate").change(function () {
        $.get("/Projects/GetDistricts", { governorateCode: $(this).val() }, function (data) {
            fillSelect("#district", data);
            resetSelect("#subdistrict");
            resetSelect("#community");
        });
    });

    $("#district").change(function () {
        $.get("/Projects/GetSubDistricts", { districtCode: $(this).val() }, function (data) {
            fillSelect("#subdistrict", data);
            resetSelect("#community");
        });
    });

    $("#subdistrict").change(function () {
        $.get("/Projects/GetCommunities", { subDistrictCode: $(this).val() }, function (data) {
            fillSelect("#community", data);
        });
    });

    // Add location
    $("#add-location").click(function () {
        const govCode = $("#governorate").val();
        const govName = $("#governorate option:selected").text();

        const distCode = $("#district").val();
        const distName = $("#district option:selected").text();

        const subCode = $("#subdistrict").val();
        const subName = $("#subdistrict option:selected").text();

        const commCode = $("#community").val();
        const commName = $("#community option:selected").text();

        if (!govCode || !distCode || !subCode || !commCode) {
            showValidationMessage("Please select all location levels.");
            return;
        }

        // Check for duplicates
        const exists = selections.some(x =>
            x.GovernorateCode === govCode &&
            x.DistrictCode === distCode &&
            x.SubDistrictCode === subCode &&
            x.CommunityCode === commCode
        );

        if (exists) {
            showValidationMessage("This location has already been added.");
            return;
        }

        // Add location
        const item = {
            GovernorateCode: govCode,
            DistrictCode: distCode,
            SubDistrictCode: subCode,
            CommunityCode: commCode
        };

        selections.push(item);

        // Create list item with "Clear" button
        const $li = $(`
            <li class="list-group-item d-flex justify-content-between align-items-center">
                ${govName} > ${distName} > ${subName} > ${commName}
                <button type="button" class="btn btn-sm btn-danger btn-clear">Clear</button>
            </li>
        `);

        // Attach remove handler
        $li.find(".btn-clear").click(function () {
            // Remove from selections array
            selections = selections.filter(x =>
                !(x.GovernorateCode === govCode &&
                  x.DistrictCode === distCode &&
                  x.SubDistrictCode === subCode &&
                  x.CommunityCode === commCode)
            );
            // Remove from DOM
            $li.remove();
            // Update hidden input
            $("#location-data").val(JSON.stringify(selections));
        });

        $("#selected-locations").append($li);
        $("#location-data").val(JSON.stringify(selections));

        resetDropdowns();
    });

    // Reset handler
    $("#reset-dropdowns").click(resetDropdowns);

    // Utility functions
    function fillSelect(selector, data) {
        let select = $(selector);
        select.empty().append(`<option value="">-- Select --</option>`);
        data.forEach(x => select.append(`<option value="${x.code}">${x.aR_Name}</option>`));
    }

    function resetSelect(selector) {
        $(selector).empty().append(`<option value="">-- Select --</option>`);
    }

    function resetDropdowns() {
        $("#governorate").val("");
        resetSelect("#district");
        resetSelect("#subdistrict");
        resetSelect("#community");
    }

    // Validation message display
    function showValidationMessage(message) {
        const alertBox = $("#location-validation-alert");

        if (alertBox.length === 0) {
            $("#location-selector").after(`
                <div id="location-validation-alert" class="alert alert-warning mt-3">${message}</div>
            `);
        } else {
            alertBox.text(message).fadeIn();
        }

        setTimeout(() => $("#location-validation-alert").fadeOut(), 3000);
    }


    // Prevent submitting if no locations have been added
    $('form.needs-validation').on('submit', function (e) {
      // Make location validation optional for now - users can add locations later
      // if (selections.length === 0) {
      //   e.preventDefault();
      //   showValidationMessage("You must add at least one location before creating the project.");
      //   return false;
      // }
      
      // Add form submission debugging
      console.log("=== FORM SUBMISSION DEBUG ===");
      console.log("Form submitting with selections:", selections.length);
      
      // Log form data
      const formData = new FormData(this);
      console.log("Form fields:");
      for (let [key, value] of formData.entries()) {
        console.log(`${key}: ${value}`);
      }
      
      // Check required fields
      const projectName = $('[name="Project.ProjectName"]').val();
      const estimatedBudget = $('[name="Project.EstimatedBudget"]').val();
      const startDate = $('[name="Project.StartDate"]').val();
      const endDate = $('[name="Project.EndDate"]').val();
      
      console.log("Required fields check:");
      console.log(`Project Name: '${projectName}'`);
      console.log(`Estimated Budget: '${estimatedBudget}'`);
      console.log(`Start Date: '${startDate}'`);
      console.log(`End Date: '${endDate}'`);
      console.log("=== END FORM DEBUG ===");
    });

    // Measures Management
    let measureIndex = 0;
    const availableIndicators = @Html.Raw(ViewBag.IndicatorsJson ?? "[]");
    
    console.log("Available Indicators:", availableIndicators);
    console.log("Indicators count:", availableIndicators ? availableIndicators.length : 0);

    function addMeasureRow() {
        const container = document.getElementById('measures-container');
        
        // Generate indicator options
        const indicatorOptions = availableIndicators && availableIndicators.length > 0 
            ? availableIndicators.map(ind => `<option value="${ind.IndicatorCode || ''}">${ind.Name || 'Unnamed Indicator'}</option>`).join('')
            : '<option value="">No indicators available</option>';
        
        const rowHtml = `
            <div class="row g-3 align-items-end mb-3" id="measure-row-${measureIndex}">
                <div class="col-md-3">
                    <label class="form-label">@Localizer["Date"]</label>
                    <input name="TargetMeasures[${measureIndex}].Date" type="date" class="form-control" value="${new Date().toISOString().split('T')[0]}" required />
                </div>
                <div class="col-md-2">
                    <label class="form-label">@Localizer["Value"]</label>
                    <input name="TargetMeasures[${measureIndex}].Value" type="number" step="0.01" min="0.01" class="form-control" required />
                </div>
                <div class="col-md-4">
                    <label class="form-label">@Localizer["Indicator"]</label>
                    <select name="TargetMeasures[${measureIndex}].IndicatorCode" class="form-select" required>
                        <option value="">-- @Localizer["Select Indicator"] --</option>
                        ${indicatorOptions}
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-outline-danger" onclick="removeMeasureRow(${measureIndex})">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
                <input name="TargetMeasures[${measureIndex}].ValueType" type="hidden" value="2" />
            </div>
        `;
        container.insertAdjacentHTML('beforeend', rowHtml);
        measureIndex++;
    }

    function removeMeasureRow(index) {
        const row = document.getElementById(`measure-row-${index}`);
        if (row) {
            row.remove();
        }
    }


</script>
