@model MonitoringAndEvaluationPlatform.ViewModel.DashboardSummaryViewModel
@{
	ViewData["Title"] = "Summary";
	Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
<head>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
</head>
<divp style="padding-top: 10px;" class="row text-center g-4 mb-4">
	<div class="col-md-3">
		<div class="card shadow-lg border-0 bg-primary text-white">
			<div class="card-body">
				<i class="bi bi-diagram-3-fill display-5 mb-2"></i>
				<h5 class="card-title">Total Frameworks</h5>
				<h2 class="fw-bold">@Model.TotalFrameworks</h2>
			</div>
		</div>
	</div>
	<div class="col-md-3">
		<div class="card shadow-lg border-0 bg-success text-white">
			<div class="card-body">
				<i class="bi bi-bar-chart-fill display-5 mb-2"></i>
				<h5 class="card-title">Indicators</h5>
				<h2 class="fw-bold">@Model.TotalIndicators</h2>
			</div>
		</div>
	</div>
	<div class="col-md-3">
		<div class="card shadow-lg border-0 bg-warning text-dark">
			<div class="card-body">
				<i class="bi bi-building display-5 mb-2"></i>
				<h5 class="card-title">Projects</h5>
				<h2 class="fw-bold">@Model.TotalProjects</h2>
			</div>
		</div>
	</div>
	<div class="col-md-3">
		<div class="card shadow-lg border-0 bg-danger text-white">
			<div class="card-body">
				<i class="bi bi-geo-alt-fill display-5 mb-2"></i>
				<h5 class="card-title">Regions</h5>
				<h2 class="fw-bold">@Model.TotalRegions</h2>
			</div>
		</div>
	</div>
</divp>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-doughnutlabel@1.0.3"></script>

<div id="gaugesContainer" class="row"></div>

<script>
              async function loadGauges() {
        const response = await fetch('/Dashboard/FrameworksGauge');
        const frameworks = await response.json();

        const container = document.getElementById('gaugesContainer');
        container.innerHTML = '';

        frameworks.forEach(framework => {
            const card = document.createElement('div');
            card.className = 'col-md-6 mb-4';

            const chartId = `gaugeChart_${framework.code}`;

            card.innerHTML = `
                <div class="card shadow-sm p-4">
                    <h5 class="mb-3">${framework.name}</h5>

                    <div class="row align-items-center">
                        <!-- Gauge Chart -->
                        <div class="col-md-6 text-center">
                            <canvas id="${chartId}" height="160"></canvas>
                            <div class="fw-bold mt-2" style="color:#00c853; font-size: 1.1rem;">
                                ${framework.rate}% Achieved
                            </div>
                        </div>

                        <!-- Progress Info -->
                        <div class="col-md-6">
                            <div class="mb-2 fw-bold text-muted">Progress</div>
                            <div class="progress mb-3" style="height: 25px;">
                                <div class="progress-bar bg-success" role="progressbar"
                                    style="width: ${framework.rate}%"
                                    aria-valuenow="${framework.rate}" aria-valuemin="0" aria-valuemax="100">
                                    ${framework.rate}%
                                </div>
                            </div>
                            <div class="text-muted" style="font-size: 0.9rem;">
                                Indicators: ${framework.indicatorCount}<br/>
                                Total Target: ${framework.totalTarget}<br/>
                                Total Achieved: ${framework.totalAchieved}
                            </div>
                        </div>
                    </div>
                </div>
            `;

            container.appendChild(card);

            // Draw Gauge
            const ctx = document.getElementById(chartId).getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    datasets: [{
                        data: [framework.rate, 100 - framework.rate],
                        backgroundColor: ['#00c853', '#e0e0e0'],
                        borderWidth: 0,
                        cutout: '80%'
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { display: false },
                        tooltip: { enabled: false },
                        doughnutlabel: {
                            labels: [
                                {
                                    text: `${framework.rate}%`,
                                    font: { size: 24, weight: 'bold' },
                                    color: '#00c853'
                                },
                                {
                                    text: 'Achieved',
                                    font: { size: 14 },
                                    color: '#666'
                                }
                            ]
                        }
                    }
                }
            });
        });
    }
	loadGauges();
</script>

